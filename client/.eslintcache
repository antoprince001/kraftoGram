[{"D:\\Insta-Clone\\client\\src\\reportWebVitals.js":"1","D:\\Insta-Clone\\client\\src\\App.js":"2","D:\\Insta-Clone\\client\\src\\components\\Navbar.js":"3","D:\\Insta-Clone\\client\\src\\components\\screens\\Home.js":"4","D:\\Insta-Clone\\client\\src\\components\\screens\\Signup.js":"5","D:\\Insta-Clone\\client\\src\\components\\screens\\Profile.js":"6","D:\\Insta-Clone\\client\\src\\components\\screens\\SignIn.js":"7","D:\\Insta-Clone\\client\\src\\components\\screens\\CreatePost.js":"8","D:\\Insta-Clone\\client\\src\\index.js":"9","D:\\Insta-Clone\\client\\src\\reducers\\userReducer.js":"10","D:\\Insta-Clone\\client\\src\\components\\screens\\UserProfile.js":"11","D:\\Insta-Clone\\client\\src\\components\\screens\\FollowedUsers.js":"12","D:\\Insta-Clone\\client\\src\\components\\screens\\ResetPassword.js":"13","D:\\Insta-Clone\\client\\src\\components\\screens\\LatestPassword.js":"14","D:\\KraftOnChain\\client\\src\\App.js":"15","D:\\KraftOnChain\\client\\src\\components\\screens\\Signup.js":"16","D:\\KraftOnChain\\client\\src\\components\\screens\\Profile.js":"17","D:\\KraftOnChain\\client\\src\\reducers\\userReducer.js":"18","D:\\KraftOnChain\\client\\src\\components\\screens\\FollowedUsers.js":"19","D:\\KraftOnChain\\client\\src\\components\\Navbar.js":"20","D:\\KraftOnChain\\client\\src\\components\\screens\\SignIn.js":"21","D:\\KraftOnChain\\client\\src\\components\\screens\\Home.js":"22","D:\\KraftOnChain\\client\\src\\reportWebVitals.js":"23","D:\\KraftOnChain\\client\\src\\components\\screens\\UserProfile.js":"24","D:\\KraftOnChain\\client\\src\\components\\screens\\LatestPassword.js":"25","D:\\KraftOnChain\\client\\src\\components\\screens\\CreatePost.js":"26"},{"size":362,"mtime":499162500000,"results":"27","hashOfConfig":"28"},{"size":2104,"mtime":1606753040468,"results":"29","hashOfConfig":"28"},{"size":3233,"mtime":1606759431982,"results":"30","hashOfConfig":"28"},{"size":6344,"mtime":1606730729443,"results":"31","hashOfConfig":"28"},{"size":4139,"mtime":1606754227401,"results":"32","hashOfConfig":"28"},{"size":4924,"mtime":1606735245292,"results":"33","hashOfConfig":"28"},{"size":2652,"mtime":1606754302752,"results":"34","hashOfConfig":"28"},{"size":3078,"mtime":1606497098545,"results":"35","hashOfConfig":"28"},{"size":500,"mtime":499162500000,"results":"36","hashOfConfig":"28"},{"size":588,"mtime":1606733112242,"results":"37","hashOfConfig":"28"},{"size":4795,"mtime":1606729357344,"results":"38","hashOfConfig":"28"},{"size":6179,"mtime":1606717512083,"results":"39","hashOfConfig":"28"},{"size":2264,"mtime":1606751451305,"results":"40","hashOfConfig":"28"},{"size":2253,"mtime":1606753957752,"results":"41","hashOfConfig":"28"},{"size":2104,"mtime":1606753040468,"results":"42","hashOfConfig":"43"},{"size":4133,"mtime":1606799055869,"results":"44","hashOfConfig":"43"},{"size":4922,"mtime":1606801501153,"results":"45","hashOfConfig":"43"},{"size":588,"mtime":1606733112242,"results":"46","hashOfConfig":"43"},{"size":6179,"mtime":1606717512083,"results":"47","hashOfConfig":"43"},{"size":3225,"mtime":1606802258931,"results":"48","hashOfConfig":"43"},{"size":3027,"mtime":1606815467385,"results":"49","hashOfConfig":"43"},{"size":6441,"mtime":1606802520992,"results":"50","hashOfConfig":"43"},{"size":362,"mtime":499162500000,"results":"51","hashOfConfig":"43"},{"size":4795,"mtime":1606801872701,"results":"52","hashOfConfig":"43"},{"size":2253,"mtime":1606753957752,"results":"53","hashOfConfig":"43"},{"size":3078,"mtime":1606497098545,"results":"54","hashOfConfig":"43"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},"1bbv6oa",{"filePath":"58","messages":"59","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"63"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"63"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"63"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"63"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"63"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"63"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"89"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"63"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"63"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1i8w1ue",{"filePath":"98","messages":"99","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"101"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"101"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"113","messages":"114","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\Insta-Clone\\client\\src\\reportWebVitals.js",[],["124","125"],"D:\\Insta-Clone\\client\\src\\App.js",["126","127"],"import React, {createContext, useContext, useEffect, useReducer} from 'react';\nimport NavBar from './components/Navbar'\nimport \"./App.css\"\nimport {BrowserRouter, Route, Switch, useHistory} from 'react-router-dom'\nimport Home from './components/screens/Home'\nimport Signin from './components/screens/SignIn'\nimport Signup from './components/screens/Signup'\nimport Profile from './components/screens/Profile'\nimport CreatePost from './components/screens/CreatePost'\nimport UserProfile from './components/screens/UserProfile'\nimport ResetPassword from './components/screens/ResetPassword'\nimport LatestPassword from './components/screens/LatestPassword'\nimport FollowedPosts from './components/screens/FollowedUsers'\nimport {reducer, initialState} from './reducers/userReducer'\n\nexport const UserContext = createContext()\n\nconst Routing = () =>{\n  const history = useHistory()\n  const {state, dispatch} = useContext(UserContext)\n  useEffect(()=>{\n    const user = JSON.parse(localStorage.getItem(\"user\"))\n    if(user)\n    {\n      dispatch({type:\"USER\",payload:user})\n      //history.push('/')\n    }\n    else\n    {\n      if(!history.location.pathname.startsWith('/resetPassword'))\n      {\n        history.push('/signin')\n      }\n    }\n  },[])\n\n  return(\n    <Switch>\n       <Route exact path=\"/\"><Home/></Route>\n        <Route path=\"/signin\"> <Signin/> </Route>\n        <Route path=\"/signup\"><Signup/></Route>\n        <Route exact path=\"/profile\"> <Profile/> </Route>\n        <Route path=\"/create\"><CreatePost/></Route>\n        <Route path=\"/followersposts\"> <FollowedPosts/> </Route>\n        <Route path=\"/profile/:userid\"><UserProfile/></Route>\n        <Route exact path=\"/resetPassword\"> <ResetPassword/> </Route>\n        <Route path=\"/resetPassword/:token\"> <LatestPassword/> </Route>\n    </Switch>\n  )\n}\n\nfunction App() {\n  const [state, dispatch] = useReducer(reducer, initialState)\n  return (\n    <UserContext.Provider value={{state, dispatch}}>\n        <BrowserRouter>\n            <NavBar/>\n            <Routing/>\n        </BrowserRouter>\n    </UserContext.Provider>\n   \n  );\n}\n\nexport default App;\n ","D:\\Insta-Clone\\client\\src\\components\\Navbar.js",[],["128","129"],"D:\\Insta-Clone\\client\\src\\components\\screens\\Home.js",["130","131","132","133","134","135"],"import React,{useState,useEffect,useContext} from 'react'\r\nimport {UserContext} from '../../App'\r\nimport {Link} from 'react-router-dom'\r\nconst Home  = ()=>{\r\n    const [data,setData] = useState([])\r\n    const {state,dispatch} = useContext(UserContext)\r\n    useEffect(()=>{\r\n       fetch('/allpost',{\r\n           headers:{\r\n               \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\r\n           }\r\n       }).then(res=>res.json())\r\n       .then(result=>{\r\n           console.log(result)\r\n           setData(result.posts)\r\n       })\r\n    },[])\r\n\r\n    const likePost = (id)=>{\r\n          fetch('/like',{\r\n              method:\"put\",\r\n              headers:{\r\n                  \"Content-Type\":\"application/json\",\r\n                  \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\r\n              },\r\n              body:JSON.stringify({\r\n                  postId:id\r\n              })\r\n          }).then(res=>res.json())\r\n          .then(result=>{\r\n                   //   console.log(result)\r\n            const newData = data.map(item=>{\r\n                if(item._id==result._id){\r\n                    return result\r\n                }else{\r\n                    return item\r\n                }\r\n            })\r\n            setData(newData)\r\n          }).catch(err=>{\r\n              console.log(err)\r\n          })\r\n    }\r\n    const unlikePost = (id)=>{\r\n          fetch('/dislike',{\r\n              method:\"put\",\r\n              headers:{\r\n                  \"Content-Type\":\"application/json\",\r\n                  \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\r\n              },\r\n              body:JSON.stringify({\r\n                  postId:id\r\n              })\r\n          }).then(res=>res.json())\r\n          .then(result=>{\r\n            //   console.log(result)\r\n            const newData = data.map(item=>{\r\n                if(item._id==result._id){\r\n                    return result\r\n                }else{\r\n                    return item\r\n                }\r\n            })\r\n            setData(newData)\r\n          }).catch(err=>{\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n    const makeComment = (text,postId)=>{\r\n          fetch('/comment',{\r\n              method:\"put\",\r\n              headers:{\r\n                  \"Content-Type\":\"application/json\",\r\n                  \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\r\n              },\r\n              body:JSON.stringify({\r\n                  postId,\r\n                  text\r\n              })\r\n          }).then(res=>res.json())\r\n          .then(result=>{\r\n              console.log(result)\r\n              const newData = data.map(item=>{\r\n                if(item._id==result._id){\r\n                    return result\r\n                }else{\r\n                    return item\r\n                }\r\n             })\r\n            setData(newData)\r\n          }).catch(err=>{\r\n              console.log(err)\r\n          })\r\n    }\r\n\r\n    const deletePost = (postid)=>{\r\n        fetch(`/deletepost/${postid}`,{\r\n            method:\"delete\",\r\n            headers:{\r\n                Authorization:\"Bearer \"+localStorage.getItem(\"jwt\")\r\n            }\r\n        }).then(res=>res.json())\r\n        .then(result=>{\r\n            console.log(result)\r\n            const newData = data.filter(item=>{\r\n                return item._id !== result._id\r\n            })\r\n            setData(newData)\r\n        })\r\n    }\r\n   return (\r\n       <div className=\"home\">\r\n           {\r\n               data.map(item=>{\r\n                   return(\r\n                       <div className=\"card home-card\" key={item._id}>\r\n                           {/* <img src={state.pic}/> */}\r\n                           {/* <img src={item.postedBy._id == state._id ? state.pic: item.postedBy.pic}/> */}\r\n                            <h5 style={{padding:\"5px\"}}><Link to={item.postedBy._id !== state._id?\"/profile/\"+item.postedBy._id :\"/profile\"  }>{item.postedBy.name}</Link> \r\n                            {item.postedBy._id == state._id \r\n                            && <i className=\"material-icons\" style={{\r\n                                float:\"right\",\r\n                                color:\"red\"\r\n                            }} \r\n                            onClick={()=>deletePost(item._id)}\r\n                            >delete</i>\r\n\r\n                            }</h5>\r\n                            <div className=\"card-image\">\r\n                                <img src={item.photo}/>\r\n                            </div>\r\n                            <div className=\"card-content\">\r\n                            <i className=\"material-icons\" style={{color:\"red\"}}>favorite</i>\r\n                            {item.likes.includes(state._id)\r\n                            ? \r\n                             <i className=\"material-icons\"\r\n                                    onClick={()=>{unlikePost(item._id)}}\r\n                              >thumb_down</i>\r\n                            : \r\n                            <i className=\"material-icons\"\r\n                            onClick={()=>{likePost(item._id)}}\r\n                            >thumb_up</i>\r\n                            }\r\n                            \r\n                           \r\n                                <h6>{item.likes.length} likes</h6>\r\n                                <h6>{item.title}</h6>\r\n                                <p>{item.body}</p>\r\n                                {\r\n                                    item.comments.map(record=>{\r\n                                        return(\r\n                                        <h6 key={record._id}><span style={{fontWeight:\"500\"}}>{record.postedBy.name}</span> {record.text}</h6>\r\n                                        )\r\n                                    })\r\n                                }\r\n                                <form onSubmit={(e)=>{\r\n                                    e.preventDefault()\r\n                                    makeComment(e.target[0].value,item._id)\r\n                                }}>\r\n                                  <input type=\"text\" placeholder=\"add a comment\" />  \r\n                                </form>\r\n                                \r\n                            </div>\r\n                        </div> \r\n                   )\r\n               })\r\n           }\r\n          \r\n          \r\n       </div>\r\n   )\r\n}\r\n\r\n\r\nexport default Home","D:\\Insta-Clone\\client\\src\\components\\screens\\Signup.js",["136","137","138"],"import React, {useState, useEffect} from 'react'\r\nimport {Link, useHistory} from 'react-router-dom'\r\nimport M from 'materialize-css'\r\n\r\nconst Signup = () =>{\r\n    const history = useHistory()\r\n    const [name, setName] = useState(\"\")\r\n    const [password, setPassword] = useState(\"\")\r\n    const [email, setEmail] = useState(\"\")\r\n    const [about, setAbout] = useState(\"\")\r\n    const [image, setImage] = useState(\"\")\r\n    const [url, setUrl] = useState(undefined)\r\n\r\n    //mount field\r\n    useEffect(()=>{\r\n        if(url)\r\n        {\r\n            uploadFields()\r\n        }\r\n\r\n    },[url])\r\n    \r\n    //profile update\r\n    const uploadPic = () =>{\r\n        const data = new FormData()\r\n        data.append(\"file\",image)\r\n        data.append(\"upload_preset\",\"chordsNstrings\")\r\n        data.append(\"cloud_name\", \"chordsnstrings\")\r\n        fetch(\"https://api.cloudinary.com/v1_1/chordsnstrings/image/upload\",{\r\n            method:\"post\",\r\n            body:data\r\n        })\r\n        .then(res=>res.json())\r\n        .then(data=>{\r\n            setUrl(data.url)\r\n            //console.log(data.url)\r\n        })\r\n        .catch(err=>{\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n    const uploadFields =() =>{\r\n          \r\n        if(!/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(email))\r\n        {\r\n            M.toast({html:\"Enter a valid email\", classes:\"#82b1ff blue darken-1\"})\r\n            return\r\n        }\r\n\r\n        fetch(\"/signup\",{\r\n            method:\"post\",\r\n            headers:{\r\n                \"Content-Type\":\"application/json\"\r\n            },\r\n            body: JSON.stringify({\r\n                name,\r\n                password,\r\n                email,\r\n                about,\r\n                pic:url\r\n            })\r\n        }).then(res=>\r\n            res.json())\r\n        .then(data=>{\r\n           if(data.error)\r\n           {\r\n               M.toast({html: data.error, classes:\"#82b1ff blue darken-1\"})\r\n           }\r\n           else{\r\n               M.toast({html:data.message, classes: \"#00e676 green accent-3\"})\r\n               history.push('/signin')\r\n           }\r\n        }).catch(err=>{\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n    const PostData = ()=>{\r\n        if(image)\r\n        {\r\n            uploadPic()\r\n        }\r\n        else\r\n        {\r\n            uploadFields()\r\n        }\r\n      \r\n    }\r\n\r\n    return(\r\n        <div className=\"mycard\">\r\n             <div className=\"card auth-card input-field\">\r\n                <h2> Chords 'N' Strings </h2>\r\n                <input type=\"text\" \r\n                placeholder=\"Name\" \r\n                value={name} \r\n                onChange={(e)=>setName(e.target.value)}/>\r\n\r\n                <input type=\"text\" \r\n                placeholder=\"Email\"\r\n                value={email}\r\n                onChange= {(e)=> setEmail(e.target.value)}/>\r\n\r\n                <input type=\"password\" \r\n                placeholder=\"Password\"\r\n                value={password}\r\n                onChange={(e)=> setPassword(e.target.value)}/>\r\n\r\n                <input type=\"text\" \r\n                placeholder=\"About you\"\r\n                value={about}\r\n                onChange={(e)=> setAbout(e.target.value)}/>\r\n\r\n            <div className=\"file-field input-field\">\r\n                <div className=\"btn #64b5f6 blue darken-1\">\r\n                    <span> Profile Picture </span>\r\n                    <input type=\"file\"\r\n                    onChange={(e)=>setImage(e.target.files[0])}/>\r\n                </div>\r\n                <div className=\"file-path-wrapper\">\r\n                    <input className=\"file-path validate\" type=\"text\"/>\r\n                </div>\r\n            </div>\r\n                <button className=\"btn waves-effect waves-light #64b5f6 blue darken-1\" onClick={()=>PostData()}>\r\n                    Sign Up\r\n                </button>\r\n                <h5>\r\n                    <Link to=\"/signin\"> Have an account already ? </Link>\r\n                </h5>\r\n               \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Signup","D:\\Insta-Clone\\client\\src\\components\\screens\\Profile.js",["139","140"],"\r\nimport React, {useEffect, useState, useContext} from 'react'\r\nimport {UserContext} from '../../App'\r\n\r\nconst Profile = () =>{\r\n    const [mypics, setPics] = useState([])\r\n    const [image, setImage] = useState(\"\")\r\n    //const [url, setUrl] = useState(\"\")\r\n    const {state, dispatch} = useContext(UserContext)\r\n    console.log(state)\r\n    useEffect(()=>{\r\n        fetch('/mypost',{\r\n            headers:{\r\n                \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\r\n            }\r\n        }).then(res=>res.json())\r\n        .then(result=>{\r\n            setPics(result.mypost)\r\n        })\r\n    },[])\r\n\r\n    useEffect(()=>{\r\n        if(image)\r\n        {\r\n            const data = new FormData()\r\n            data.append(\"file\",image)\r\n            data.append(\"upload_preset\",\"chordsNstrings\")\r\n            data.append(\"cloud_name\", \"chordsnstrings\")\r\n            fetch(\"https://api.cloudinary.com/v1_1/chordsnstrings/image/upload\",{\r\n                method:\"post\",\r\n                body:data\r\n            })\r\n            .then(res=>res.json())\r\n            .then(data=>{\r\n                //setUrl(data.url)\r\n                // localStorage.setItem(\"user\",JSON.stringify({...state, pic:data.url}))\r\n                // //console.log(data.url)\r\n                // dispatch({type:\"PICUPDATE\", payload:data.url})\r\n                fetch('/updatepic',{\r\n                    method:\"put\",\r\n                    headers:{\r\n                        \"Content-type\":\"application/json\",\r\n                        \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\r\n                    },\r\n                    body:JSON.stringify({\r\n                        pic:data.url\r\n                    })\r\n                }).then(res=>res.json())\r\n                .then(result=>{\r\n                    console.log(result)\r\n                    localStorage.setItem(\"user\",JSON.stringify({...state, pic:data.pic}))\r\n                    dispatch({type:\"PICUPDATE\", payload:result.pic})\r\n                    // window.location.reload()\r\n                })\r\n               \r\n            })\r\n            .catch(err=>{\r\n                console.log(err)\r\n            })\r\n        }\r\n\r\n    },[image])\r\n\r\n    const updatePicture = (file)=>{\r\n        setImage(file)\r\n  \r\n    }\r\n\r\n    return(\r\n     <div style={{maxWidth:\"550px\", margin:\"0px auto\"}}>\r\n         <div style={{\r\n             display:\"flex\",\r\n             justifyContent:\"space-around\",\r\n             margin:\"18px 0px\",\r\n             borderBottom:\"1px solid grey\"\r\n         }}>\r\n             <div>\r\n                <img style={{width:\"160px\", height:\"160px\", borderRadius:\"80px\"}}\r\n                src={state?state.pic:\"Loading\"}\r\n                />\r\n             </div>\r\n\r\n             {/* <div>\r\n                <h4> {state?state.name:\"Loading\"} </h4>\r\n                <div style={{display:\"flex\",\r\n                justifyContent:\"space-between\",\r\n                width:\"110%\"\r\n            }}>\r\n                    <h6> {mypics.length} posts </h6> \r\n                    <h6> {state?state.followers.length:\"0\"} Followers </h6> \r\n                    <h6> {state?state.following.length:\"0\"} Following </h6> \r\n                </div>\r\n             </div> */}\r\n              <div>\r\n                   <h4>{state?state.name:\"loading\"}</h4>\r\n                   <h5>{state?state.email:\"loading\"}</h5>\r\n                   <h5>{state?state.about:\"loading\"}</h5>\r\n                   <hr></hr>\r\n                   <div style={{display:\"flex\",justifyContent:\"space-between\",width:\"108%\"}}>\r\n                       <h6>{mypics.length} posts</h6>\r\n                        {/* <h6>0 Followers </h6>\r\n                       <h6>0 Following</h6>  */}\r\n                       <h6>{state?state.followers.length:\"0\"} followers</h6> \r\n                        <h6>{state?state.following.length:\"0\"} following</h6>\r\n                   </div>\r\n\r\n               </div>\r\n               {/* <button className=\"btn waves-effect waves-light #64b5f6 blue darken-1\"\r\n               onClick={()=> updatePicture()}>\r\n                  Change DP\r\n                </button> */}\r\n\r\n            <div className=\"file-field input-field\">\r\n                <div className=\"btn #64b5f6 blue darken-1\">\r\n                    <span> Change DP </span>\r\n                    <input type=\"file\"\r\n                    onChange={(e)=>updatePicture(e.target.files[0])}/>\r\n                </div>\r\n                {/* <div className=\"file-path-wrapper\">\r\n                    <input className=\"file-path validate\" type=\"text\"/>\r\n                </div> */}\r\n            </div>\r\n         </div>\r\n     \r\n         <div className=\"gallery\">\r\n             {\r\n                 mypics.map(item=>{\r\n                     return(\r\n                        <img key={item._id} className=\"item\" src={item.photo} alt={item.title}/>\r\n                     )\r\n                 })\r\n             }\r\n\r\n         </div>\r\n     </div>\r\n    )\r\n}\r\n\r\nexport default Profile","D:\\Insta-Clone\\client\\src\\components\\screens\\SignIn.js",["141","142","143"],"import React, {useState, useContext} from 'react'\r\nimport {Link, useHistory} from 'react-router-dom'\r\nimport M from 'materialize-css'\r\nimport {UserContext} from '../../App'\r\n\r\nconst SignIn = () =>{\r\n    const {state, dispatch} = useContext(UserContext)\r\n    const history = useHistory()\r\n    const [password, setPassword] = useState(\"\")\r\n    const [email, setEmail] = useState(\"\")\r\n    const PostData = ()=>{\r\n        if(!/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(email))\r\n        {\r\n            M.toast({html:\"Enter a valid email\", classes:\"#82b1ff blue darken-1\"})\r\n            return\r\n        }\r\n\r\n        fetch(\"/signin\",{\r\n            method:\"post\",\r\n            headers:{\r\n                \"Content-Type\":\"application/json\"\r\n            },\r\n            body: JSON.stringify({\r\n                password,\r\n                email\r\n            })\r\n        }).then(res=>\r\n            res.json())\r\n        .then(data=>{\r\n            console.log(data)\r\n           if(data.error)\r\n           {\r\n               M.toast({html: data.error, classes:\"#82b1ff blue darken-1\"})\r\n           }\r\n           else{\r\n               localStorage.setItem(\"jwt\",data.token)\r\n               localStorage.setItem(\"user\",JSON.stringify(data.user))\r\n               dispatch({type:\"USER\",payload:data.user})\r\n               M.toast({html:\"SignIn successful\", classes: \"#00e676 green accent-3\"})\r\n               history.push('/')\r\n           }\r\n        }).catch(err=>{\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n    return(\r\n        <body class=\"bg\">\r\n        <div className=\"mycard\">\r\n             <div className=\"card auth-card input-field\">\r\n                <h2> Chords 'N' Strings </h2>\r\n                <input type=\"text\" \r\n                placeholder=\"Email\"\r\n                value={email}\r\n                onChange= {(e)=> setEmail(e.target.value)}/>\r\n\r\n                <input type=\"password\" \r\n                placeholder=\"Password\"\r\n                value={password}\r\n                onChange={(e)=> setPassword(e.target.value)}/>\r\n\r\n                <button className=\"btn waves-effect waves-light #64b5f6 blue darken-1\"\r\n                onClick={()=> PostData()}>\r\n                    Login\r\n                </button>\r\n\r\n                <h5>\r\n                    <Link to=\"/signup\"> Don't have an account ? </Link>\r\n                </h5>\r\n                <h6>\r\n                    <Link to=\"/resetPassword\"> Forgot password ? </Link>\r\n                </h6>\r\n            </div>\r\n        </div>\r\n        </body>\r\n    )\r\n}\r\n\r\nexport default SignIn","D:\\Insta-Clone\\client\\src\\components\\screens\\CreatePost.js",["144"],"import React, { useState, useEffect } from 'react'\r\nimport M from 'materialize-css'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nconst CreatePost = () =>{\r\n\r\n    const history = useHistory()\r\n    const [title, setTitle] = useState(\"\")\r\n    const [body, setBody] = useState(\"\")\r\n    const [image, setImage] = useState(\"\")\r\n    const [url, setUrl] = useState(\"\")\r\n\r\n\r\n    useEffect(()=>{\r\n        if(url)\r\n        {\r\n            fetch(\"/createpost\",{\r\n                method:\"post\",\r\n                headers:{\r\n                    \"Content-Type\":\"application/json\",\r\n                    \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\r\n                },\r\n                body: JSON.stringify({\r\n                    title,\r\n                    body,\r\n                    pic:url\r\n                })\r\n            }).then(res=> res.json())\r\n            .then(data=>{\r\n               if(data.error){\r\n                  M.toast({html: data.error,classes:\"#c62828 red darken-3\"})\r\n               }\r\n               else{\r\n                   M.toast({html:\"Created post Successfully\",classes:\"#43a047 green darken-1\"})\r\n                   history.push('/')\r\n               }\r\n            }).catch(err=>{\r\n                console.log(err)\r\n            })\r\n        }\r\n    }, [url])\r\n    \r\n   \r\n    const postDetails=()=>{\r\n        const data = new FormData()\r\n        data.append(\"file\",image)\r\n        data.append(\"upload_preset\",\"chordsNstrings\")\r\n        data.append(\"cloud_name\", \"chordsnstrings\")\r\n        fetch(\"https://api.cloudinary.com/v1_1/chordsnstrings/image/upload\",{\r\n            method:\"post\",\r\n            body:data\r\n        })\r\n        .then(res=>res.json())\r\n        .then(data=>{\r\n            setUrl(data.url)\r\n            console.log(data.url)\r\n        })\r\n        .catch(err=>{\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n\r\n    return(\r\n        <div className=\"card input-field\"\r\n        style={{\r\n            margin: \"30px auto\",\r\n            maxWidth:\"500px\",\r\n            padding:\"20px\",\r\n            textAlign: \"center\"\r\n        }}>\r\n            <input type=\"text\" \r\n            placeholder=\"Title\"\r\n            value = {title}\r\n            onChange= {(e)=>setTitle(e.target.value)}/>\r\n\r\n            <input type=\"text\" \r\n            placeholder=\"Body\"\r\n            value={body}\r\n            onChange={(e)=> setBody(e.target.value)}/>\r\n\r\n            <div className=\"file-field input-field\">\r\n                <div className=\"btn #64b5f6 blue darken-1\">\r\n                    <span> Upload Image</span>\r\n                    <input type=\"file\"\r\n                    onChange={(e)=>setImage(e.target.files[0])}/>\r\n                </div>\r\n                <div className=\"file-path-wrapper\">\r\n                    <input className=\"file-path validate\" type=\"text\"/>\r\n                </div>\r\n            </div>\r\n             <button className=\"btn waves-effect waves-light #64b5f6 blue darken-1\"\r\n                 onClick={()=> postDetails()}>\r\n                    Submit post\r\n            </button>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CreatePost","D:\\Insta-Clone\\client\\src\\index.js",[],"D:\\Insta-Clone\\client\\src\\reducers\\userReducer.js",[],"D:\\Insta-Clone\\client\\src\\components\\screens\\UserProfile.js",["145","146"],"\r\nimport React, {useEffect, useState, useContext} from 'react'\r\nimport {UserContext} from '../../App'\r\nimport {useParams} from 'react-router-dom'\r\n\r\nconst Profile = () =>{\r\n    const [userProfile, setProfile] = useState(null)\r\n    const {state, dispatch} = useContext(UserContext)\r\n    const {userid} = useParams()\r\n    const [showfollow, setShowFollow] = useState(state?!state.following.includes(userid):true)\r\n    console.log(userid)\r\n    useEffect(()=>{\r\n        fetch(`/user/${userid}`,{\r\n            headers:{\r\n                \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\r\n            }\r\n        }).then(res=>res.json())\r\n        .then(result=>{\r\n          //console.log(result)\r\n         \r\n          setProfile(result)\r\n        })\r\n    },[])\r\n\r\n    const followUser =()=>{\r\n        fetch('/follow',{\r\n            method:\"put\",\r\n            headers:{\r\n                \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\"),\r\n                \"Content-Type\":\"application/json\"\r\n            },\r\n            body:JSON.stringify({\r\n                followId:userid\r\n            })\r\n        }).then(res=>res.json())\r\n        .then(data=>{\r\n            //console.log(data)\r\n            dispatch({type:\"UPDATE\",payload:{following:data.following,followers:data.followers}})\r\n            localStorage.setItem(\"user\",JSON.stringify(data))\r\n            setProfile((prevState=>{\r\n                return {\r\n                    //past state- i/p\r\n                    ...prevState,\r\n                    //new data\r\n                    user:{\r\n                        ...prevState.user,\r\n                        followers:[...prevState.user.followers,data._id]\r\n                    }\r\n                }\r\n            }))\r\n        })\r\n        setShowFollow(false)\r\n    }\r\n\r\n    const unfollowUser =()=>{\r\n        fetch('/unfollow',{\r\n            method:\"put\",\r\n            headers:{\r\n                \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\"),\r\n                \"Content-Type\":\"application/json\"\r\n            },\r\n            body:JSON.stringify({\r\n                unfollowId:userid\r\n            })\r\n        }).then(res=>res.json())\r\n        .then(data=>{\r\n            //console.log(data)\r\n            dispatch({type:\"UPDATE\",payload:{following:data.following,followers:data.followers}})\r\n            localStorage.setItem(\"user\",JSON.stringify(data))\r\n            \r\n            setProfile((prevState=>{\r\n                const newFollowers = prevState.user.followers.filter(item=>item !== data._id)\r\n                return {\r\n                    //past state- i/p\r\n                    ...prevState,\r\n                    //new data\r\n                    user:{\r\n                        ...prevState.user,\r\n                        followers:newFollowers\r\n                    }\r\n                }\r\n            }))\r\n        })\r\n        setShowFollow(true)\r\n    }\r\n\r\n    return(\r\n    <>\r\n    {userProfile ? \r\n     <div style={{maxWidth:\"550px\", margin:\"0px auto\"}}>\r\n         <div style={{\r\n             display:\"flex\",\r\n             justifyContent:\"space-around\",\r\n             margin:\"18px 0px\",\r\n             borderBottom:\"1px solid grey\"\r\n         }}>\r\n             <div>\r\n                <img style={{width:\"160px\", height:\"160px\", borderRadius:\"80px\"}}\r\n                src={userProfile.user.pic}\r\n                />\r\n             </div>\r\n\r\n             <div>\r\n                <h4> {userProfile.user.name} </h4>\r\n                <h4> {userProfile.user.email} </h4>\r\n                <h4> {userProfile.user.about} </h4>\r\n                <div style={{display:\"flex\",\r\n                justifyContent:\"space-between\",\r\n                width:\"110%\"\r\n            }}>\r\n                    <h6> {userProfile.posts.length} Posts </h6> \r\n                    <h6> {userProfile.user.followers.length} Followers </h6> \r\n                    <h6> {userProfile.user.following.length} Following </h6> \r\n                    <br></br>\r\n                   \r\n                </div>\r\n             </div>\r\n             {showfollow ?\r\n                <button className=\"btn waves-effect waves-light #64b5f6 blue darken-1\" onClick={()=>followUser()}>\r\n                    Follow\r\n                </button>\r\n                : <button className=\"btn waves-effect waves-light #64b5f6 blue darken-1\" onClick={()=>unfollowUser()}>\r\n                    Unfollow\r\n                </button>}\r\n            \r\n         </div>\r\n       \r\n         <div className=\"gallery\">\r\n             {\r\n                 userProfile.posts.map(item=>{\r\n                     return(\r\n                        <img key={item._id} className=\"item\" src={item.photo} alt={item.title}/>\r\n                     )\r\n                 })\r\n             }\r\n\r\n         </div>\r\n     </div>\r\n      : <h2> Loading </h2> }\r\n     </>\r\n    )\r\n}\r\n\r\nexport default Profile","D:\\Insta-Clone\\client\\src\\components\\screens\\FollowedUsers.js",["147","148","149","150","151","152"],"import React,{useState,useEffect,useContext} from 'react'\r\nimport {UserContext} from '../../App'\r\nimport {Link} from 'react-router-dom'\r\nconst Home  = ()=>{\r\n    const [data,setData] = useState([])\r\n    const {state,dispatch} = useContext(UserContext)\r\n    useEffect(()=>{\r\n       fetch('/followedposts',{\r\n           headers:{\r\n               \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\r\n           }\r\n       }).then(res=>res.json())\r\n       .then(result=>{\r\n           console.log(result)\r\n           setData(result.posts)\r\n       })\r\n    },[])\r\n\r\n    const likePost = (id)=>{\r\n          fetch('/like',{\r\n              method:\"put\",\r\n              headers:{\r\n                  \"Content-Type\":\"application/json\",\r\n                  \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\r\n              },\r\n              body:JSON.stringify({\r\n                  postId:id\r\n              })\r\n          }).then(res=>res.json())\r\n          .then(result=>{\r\n                   //   console.log(result)\r\n            const newData = data.map(item=>{\r\n                if(item._id==result._id){\r\n                    return result\r\n                }else{\r\n                    return item\r\n                }\r\n            })\r\n            setData(newData)\r\n          }).catch(err=>{\r\n              console.log(err)\r\n          })\r\n    }\r\n    const unlikePost = (id)=>{\r\n          fetch('/unlike',{\r\n              method:\"put\",\r\n              headers:{\r\n                  \"Content-Type\":\"application/json\",\r\n                  \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\r\n              },\r\n              body:JSON.stringify({\r\n                  postId:id\r\n              })\r\n          }).then(res=>res.json())\r\n          .then(result=>{\r\n            //   console.log(result)\r\n            const newData = data.map(item=>{\r\n                if(item._id==result._id){\r\n                    return result\r\n                }else{\r\n                    return item\r\n                }\r\n            })\r\n            setData(newData)\r\n          }).catch(err=>{\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n    const makeComment = (text,postId)=>{\r\n          fetch('/comment',{\r\n              method:\"put\",\r\n              headers:{\r\n                  \"Content-Type\":\"application/json\",\r\n                  \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\r\n              },\r\n              body:JSON.stringify({\r\n                  postId,\r\n                  text\r\n              })\r\n          }).then(res=>res.json())\r\n          .then(result=>{\r\n              console.log(result)\r\n              const newData = data.map(item=>{\r\n                if(item._id==result._id){\r\n                    return result\r\n                }else{\r\n                    return item\r\n                }\r\n             })\r\n            setData(newData)\r\n          }).catch(err=>{\r\n              console.log(err)\r\n          })\r\n    }\r\n\r\n    const deletePost = (postid)=>{\r\n        fetch(`/deletepost/${postid}`,{\r\n            method:\"delete\",\r\n            headers:{\r\n                Authorization:\"Bearer \"+localStorage.getItem(\"jwt\")\r\n            }\r\n        }).then(res=>res.json())\r\n        .then(result=>{\r\n            console.log(result)\r\n            const newData = data.filter(item=>{\r\n                return item._id !== result._id\r\n            })\r\n            setData(newData)\r\n        })\r\n    }\r\n   return (\r\n       <div className=\"home\">\r\n           {\r\n               data.map(item=>{\r\n                   return(\r\n                       <div className=\"card home-card\" key={item._id}>\r\n                            <h5 style={{padding:\"5px\"}}><Link to={item.postedBy._id !== state._id?\"/profile/\"+item.postedBy._id :\"/profile\"  }>{item.postedBy.name}</Link> \r\n                            {item.postedBy._id == state._id \r\n                            && <i className=\"material-icons\" style={{\r\n                                float:\"right\",\r\n                                color:\"red\"\r\n                            }} \r\n                            onClick={()=>deletePost(item._id)}\r\n                            >delete</i>\r\n\r\n                            }</h5>\r\n                            <div className=\"card-image\">\r\n                                <img src={item.photo}/>\r\n                            </div>\r\n                            <div className=\"card-content\">\r\n                            <i className=\"material-icons\" style={{color:\"red\"}}>favorite</i>\r\n                            {item.likes.includes(state._id)\r\n                            ? \r\n                             <i className=\"material-icons\"\r\n                                    onClick={()=>{unlikePost(item._id)}}\r\n                              >thumb_down</i>\r\n                            : \r\n                            <i className=\"material-icons\"\r\n                            onClick={()=>{likePost(item._id)}}\r\n                            >thumb_up</i>\r\n                            }\r\n                            \r\n                           \r\n                                <h6>{item.likes.length} likes</h6>\r\n                                <h6>{item.title}</h6>\r\n                                <p>{item.body}</p>\r\n                                {\r\n                                    item.comments.map(record=>{\r\n                                        return(\r\n                                        <h6 key={record._id}><span style={{fontWeight:\"500\"}}>{record.postedBy.name}</span> {record.text}</h6>\r\n                                        )\r\n                                    })\r\n                                }\r\n                                <form onSubmit={(e)=>{\r\n                                    e.preventDefault()\r\n                                    makeComment(e.target[0].value,item._id)\r\n                                }}>\r\n                                  <input type=\"text\" placeholder=\"add a comment\" />  \r\n                                </form>\r\n                                \r\n                            </div>\r\n                        </div> \r\n                   )\r\n               })\r\n           }\r\n          \r\n          \r\n       </div>\r\n   )\r\n}\r\n\r\n\r\nexport default Home",["153","154"],"D:\\Insta-Clone\\client\\src\\components\\screens\\ResetPassword.js",["155","156","157","158"],"import React, {useState, useContext} from 'react'\r\nimport {Link, useHistory} from 'react-router-dom'\r\nimport M from 'materialize-css'\r\n\r\n\r\nconst ResetPassword = () =>{\r\n    const history = useHistory()\r\n    const [email, setEmail] = useState(\"\")\r\n    const PostData = ()=>{\r\n        if(!/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(email))\r\n        {\r\n            M.toast({html:\"Enter a valid email\", classes:\"#82b1ff blue darken-1\"})\r\n            return\r\n        }\r\n\r\n        fetch(\"/resetPassword\",{\r\n            method:\"post\",\r\n            headers:{\r\n                \"Content-Type\":\"application/json\"\r\n            },\r\n            body: JSON.stringify({\r\n                email\r\n            })\r\n        }).then(res=>\r\n            res.json())\r\n        .then(data=>{\r\n            //console.log(data)\r\n           if(data.error)\r\n           {\r\n               M.toast({html: data.error, classes:\"#82b1ff blue darken-1\"})\r\n           }\r\n           else{\r\n               M.toast({html:data.message, classes: \"#00e676 green accent-3\"})\r\n               history.push('/signin')\r\n           }\r\n        }).catch(err=>{\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n    return(\r\n        <body class=\"bg\">\r\n        <div className=\"mycard\">\r\n             <div className=\"card auth-card input-field\">\r\n                <h2> Chords 'N' Strings </h2>\r\n                <input type=\"text\" \r\n                placeholder=\"Email\"\r\n                value={email}\r\n                onChange= {(e)=> setEmail(e.target.value)}/>\r\n\r\n                {/* <input type=\"password\" \r\n                placeholder=\"Password\"\r\n                value={password}\r\n                onChange={(e)=> setPassword(e.target.value)}/> */}\r\n                <br/>\r\n                <button className=\"btn waves-effect waves-light #64b5f6 blue darken-1\"\r\n                onClick={()=> PostData()}>\r\n                    Reset password\r\n                </button>\r\n                {/* \r\n                <h5>\r\n                    <Link to=\"/signup\"> Don't have an account ? </Link>\r\n                </h5> */}\r\n            </div>\r\n        </div>\r\n        </body>\r\n    )\r\n}\r\n\r\nexport default ResetPassword","D:\\Insta-Clone\\client\\src\\components\\screens\\LatestPassword.js",["159","160","161"],"import React, {useState, useContext} from 'react'\r\nimport {Link, useHistory, useParams} from 'react-router-dom'\r\nimport M from 'materialize-css'\r\n\r\nconst LatestPassword = () =>{\r\n    const history = useHistory()\r\n    const [password, setPassword] = useState(\"\")\r\n    const {token} = useParams()\r\n    console.log(token)\r\n    const PostData = ()=>{\r\n        // if(!/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(email))\r\n        // {\r\n        //     M.toast({html:\"Enter a valid email\", classes:\"#82b1ff blue darken-1\"})\r\n        //     return\r\n        // }\r\n\r\n        fetch(\"/newPassword\",{\r\n            method:\"post\",\r\n            headers:{\r\n                \"Content-Type\":\"application/json\"\r\n            },\r\n            body: JSON.stringify({\r\n                password,\r\n                token,\r\n            })\r\n        }).then(res=>\r\n            res.json())\r\n        .then(data=>{\r\n            console.log(data)\r\n           if(data.error)\r\n           {\r\n               M.toast({html: data.error, classes:\"#82b1ff blue darken-1\"})\r\n           }\r\n           else{\r\n            //    localStorage.setItem(\"jwt\",data.token)\r\n            //    localStorage.setItem(\"user\",JSON.stringify(data.user))\r\n            //    dispatch({type:\"USER\",payload:data.user})\r\n               M.toast({html:data.message, classes: \"#00e676 green accent-3\"})\r\n               history.push('/signin')\r\n           }\r\n        }).catch(err=>{\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n    return(\r\n        <body class=\"bg\">\r\n        <div className=\"mycard\">\r\n             <div className=\"card auth-card input-field\">\r\n                <h2> Chords 'N' Strings </h2>\r\n            \r\n                <input type=\"password\" \r\n                placeholder=\"Enter new password\"\r\n                value={password}\r\n                onChange={(e)=> setPassword(e.target.value)}/>\r\n\r\n                <button className=\"btn waves-effect waves-light #64b5f6 blue darken-1\"\r\n                onClick={()=> PostData()}>\r\n                    Change password\r\n                </button>\r\n            </div>\r\n        </div>\r\n        </body>\r\n    )\r\n}\r\n\r\nexport default LatestPassword","D:\\KraftOnChain\\client\\src\\App.js",["162","163"],"D:\\KraftOnChain\\client\\src\\components\\screens\\Signup.js",["164","165","166"],"import React, {useState, useEffect} from 'react'\r\nimport {Link, useHistory} from 'react-router-dom'\r\nimport M from 'materialize-css'\r\n\r\nconst Signup = () =>{\r\n    const history = useHistory()\r\n    const [name, setName] = useState(\"\")\r\n    const [password, setPassword] = useState(\"\")\r\n    const [email, setEmail] = useState(\"\")\r\n    const [about, setAbout] = useState(\"\")\r\n    const [image, setImage] = useState(\"\")\r\n    const [url, setUrl] = useState(undefined)\r\n\r\n    //mount field\r\n    useEffect(()=>{\r\n        if(url)\r\n        {\r\n            uploadFields()\r\n        }\r\n\r\n    },[url])\r\n    \r\n    //profile update\r\n    const uploadPic = () =>{\r\n        const data = new FormData()\r\n        data.append(\"file\",image)\r\n        data.append(\"upload_preset\",\"chordsNstrings\")\r\n        data.append(\"cloud_name\", \"chordsnstrings\")\r\n        fetch(\"https://api.cloudinary.com/v1_1/chordsnstrings/image/upload\",{\r\n            method:\"post\",\r\n            body:data\r\n        })\r\n        .then(res=>res.json())\r\n        .then(data=>{\r\n            setUrl(data.url)\r\n            //console.log(data.url)\r\n        })\r\n        .catch(err=>{\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n    const uploadFields =() =>{\r\n          \r\n        if(!/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(email))\r\n        {\r\n            M.toast({html:\"Enter a valid email\", classes:\"#82b1ff blue darken-1\"})\r\n            return\r\n        }\r\n\r\n        fetch(\"/signup\",{\r\n            method:\"post\",\r\n            headers:{\r\n                \"Content-Type\":\"application/json\"\r\n            },\r\n            body: JSON.stringify({\r\n                name,\r\n                password,\r\n                email,\r\n                about,\r\n                pic:url\r\n            })\r\n        }).then(res=>\r\n            res.json())\r\n        .then(data=>{\r\n           if(data.error)\r\n           {\r\n               M.toast({html: data.error, classes:\"#82b1ff blue darken-1\"})\r\n           }\r\n           else{\r\n               M.toast({html:data.message, classes: \"#00e676 green accent-3\"})\r\n               history.push('/signin')\r\n           }\r\n        }).catch(err=>{\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n    const PostData = ()=>{\r\n        if(image)\r\n        {\r\n            uploadPic()\r\n        }\r\n        else\r\n        {\r\n            uploadFields()\r\n        }\r\n      \r\n    }\r\n\r\n    return(\r\n        <div className=\"mycard\">\r\n             <div className=\"card auth-card input-field\">\r\n                <h2> KraftOnChain </h2>\r\n                <input type=\"text\" \r\n                placeholder=\"Name\" \r\n                value={name} \r\n                onChange={(e)=>setName(e.target.value)}/>\r\n\r\n                <input type=\"text\" \r\n                placeholder=\"Email\"\r\n                value={email}\r\n                onChange= {(e)=> setEmail(e.target.value)}/>\r\n\r\n                <input type=\"password\" \r\n                placeholder=\"Password\"\r\n                value={password}\r\n                onChange={(e)=> setPassword(e.target.value)}/>\r\n\r\n                <input type=\"text\" \r\n                placeholder=\"About you\"\r\n                value={about}\r\n                onChange={(e)=> setAbout(e.target.value)}/>\r\n\r\n            <div className=\"file-field input-field\">\r\n                <div className=\"btn #64b5f6 blue darken-1\">\r\n                    <span> Profile Picture </span>\r\n                    <input type=\"file\"\r\n                    onChange={(e)=>setImage(e.target.files[0])}/>\r\n                </div>\r\n                <div className=\"file-path-wrapper\">\r\n                    <input className=\"file-path validate\" type=\"text\"/>\r\n                </div>\r\n            </div>\r\n                <button className=\"btn waves-effect waves-light #64b5f6 blue darken-1\" onClick={()=>PostData()}>\r\n                    Sign Up\r\n                </button>\r\n                <h5>\r\n                    <Link to=\"/signin\"> Have an account already ? </Link>\r\n                </h5>\r\n               \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Signup",["167","168"],"D:\\KraftOnChain\\client\\src\\components\\screens\\Profile.js",["169","170"],"\r\nimport React, {useEffect, useState, useContext} from 'react'\r\nimport {UserContext} from '../../App'\r\n\r\nconst Profile = () =>{\r\n    const [mypics, setPics] = useState([])\r\n    const [image, setImage] = useState(\"\")\r\n    //const [url, setUrl] = useState(\"\")\r\n    const {state, dispatch} = useContext(UserContext)\r\n    console.log(state)\r\n    useEffect(()=>{\r\n        fetch('/mypost',{\r\n            headers:{\r\n                \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\r\n            }\r\n        }).then(res=>res.json())\r\n        .then(result=>{\r\n            setPics(result.mypost)\r\n        })\r\n    },[])\r\n\r\n    useEffect(()=>{\r\n        if(image)\r\n        {\r\n            const data = new FormData()\r\n            data.append(\"file\",image)\r\n            data.append(\"upload_preset\",\"chordsNstrings\")\r\n            data.append(\"cloud_name\", \"chordsnstrings\")\r\n            fetch(\"https://api.cloudinary.com/v1_1/chordsnstrings/image/upload\",{\r\n                method:\"post\",\r\n                body:data\r\n            })\r\n            .then(res=>res.json())\r\n            .then(data=>{\r\n                //setUrl(data.url)\r\n                // localStorage.setItem(\"user\",JSON.stringify({...state, pic:data.url}))\r\n                // //console.log(data.url)\r\n                // dispatch({type:\"PICUPDATE\", payload:data.url})\r\n                fetch('/updatepic',{\r\n                    method:\"put\",\r\n                    headers:{\r\n                        \"Content-type\":\"application/json\",\r\n                        \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\r\n                    },\r\n                    body:JSON.stringify({\r\n                        pic:data.url\r\n                    })\r\n                }).then(res=>res.json())\r\n                .then(result=>{\r\n                    console.log(result)\r\n                    localStorage.setItem(\"user\",JSON.stringify({...state, pic:data.pic}))\r\n                    dispatch({type:\"PICUPDATE\", payload:result.pic})\r\n                    // window.location.reload()\r\n                })\r\n               \r\n            })\r\n            .catch(err=>{\r\n                console.log(err)\r\n            })\r\n        }\r\n\r\n    },[image])\r\n\r\n    const updatePicture = (file)=>{\r\n        setImage(file)\r\n  \r\n    }\r\n\r\n    return(\r\n     <div style={{maxWidth:\"550px\", margin:\"0px auto\"}}>\r\n         <div style={{\r\n             display:\"flex\",\r\n             justifyContent:\"space-around\",\r\n             margin:\"18px 0px\",\r\n             borderBottom:\"1px solid grey\"\r\n         }}>\r\n             <div>\r\n                <img style={{width:\"160px\", height:\"160px\", borderRadius:\"80px\"}}\r\n                src={state?state.pic:\"Loading\"}\r\n                />\r\n             </div>\r\n\r\n             {/* <div>\r\n                <h4> {state?state.name:\"Loading\"} </h4>\r\n                <div style={{display:\"flex\",\r\n                justifyContent:\"space-between\",\r\n                width:\"110%\"\r\n            }}>\r\n                    <h6> {mypics.length} posts </h6> \r\n                    <h6> {state?state.followers.length:\"0\"} Followers </h6> \r\n                    <h6> {state?state.following.length:\"0\"} Following </h6> \r\n                </div>\r\n             </div> */}\r\n              <div>\r\n                   <h4>{state?state.name:\"loading\"}</h4>\r\n                   <h6>{state?state.email:\"loading\"}</h6>\r\n                   <h6>{state?state.about:\"loading\"}</h6>\r\n                   <hr></hr>\r\n                   <div style={{display:\"flex\",justifyContent:\"space-between\",width:\"108%\"}}>\r\n                       <h6>{mypics.length} posts</h6>\r\n                        {/* <h6>0 Followers </h6>\r\n                       <h6>0 Following</h6>  */}\r\n                       <h6>{state?state.followers.length:\"0\"} followers</h6> \r\n                        <h6>{state?state.following.length:\"0\"} following</h6>\r\n                   </div>\r\n\r\n               </div>\r\n               {/* <button className=\"btn waves-effect waves-light #64b5f6 blue darken-1\"\r\n               onClick={()=> updatePicture()}>\r\n                  Change DP\r\n                </button> */}\r\n\r\n            <div className=\"file-field input-field\">\r\n                <div className=\"btn #64b5f6 blue darken-1\">\r\n                    <span>Change DP</span>\r\n                    <input type=\"file\"\r\n                    onChange={(e)=>updatePicture(e.target.files[0])}/>\r\n                </div>\r\n                {/* <div className=\"file-path-wrapper\">\r\n                    <input className=\"file-path validate\" type=\"text\"/>\r\n                </div> */}\r\n            </div>\r\n         </div>\r\n     \r\n         <div className=\"gallery\">\r\n             {\r\n                 mypics.map(item=>{\r\n                     return(\r\n                        <img key={item._id} className=\"item\" src={item.photo} alt={item.title}/>\r\n                     )\r\n                 })\r\n             }\r\n\r\n         </div>\r\n     </div>\r\n    )\r\n}\r\n\r\nexport default Profile","D:\\KraftOnChain\\client\\src\\reducers\\userReducer.js",[],"D:\\KraftOnChain\\client\\src\\components\\screens\\FollowedUsers.js",["171","172","173","174","175","176"],"D:\\KraftOnChain\\client\\src\\components\\Navbar.js",[],"D:\\KraftOnChain\\client\\src\\components\\screens\\SignIn.js",["177","178","179"],"D:\\KraftOnChain\\client\\src\\components\\screens\\Home.js",["180","181","182","183","184","185"],"D:\\KraftOnChain\\client\\src\\reportWebVitals.js",[],"D:\\KraftOnChain\\client\\src\\components\\screens\\UserProfile.js",["186","187"],"\r\nimport React, {useEffect, useState, useContext} from 'react'\r\nimport {UserContext} from '../../App'\r\nimport {useParams} from 'react-router-dom'\r\n\r\nconst Profile = () =>{\r\n    const [userProfile, setProfile] = useState(null)\r\n    const {state, dispatch} = useContext(UserContext)\r\n    const {userid} = useParams()\r\n    const [showfollow, setShowFollow] = useState(state?!state.following.includes(userid):true)\r\n    console.log(userid)\r\n    useEffect(()=>{\r\n        fetch(`/user/${userid}`,{\r\n            headers:{\r\n                \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\r\n            }\r\n        }).then(res=>res.json())\r\n        .then(result=>{\r\n          //console.log(result)\r\n         \r\n          setProfile(result)\r\n        })\r\n    },[])\r\n\r\n    const followUser =()=>{\r\n        fetch('/follow',{\r\n            method:\"put\",\r\n            headers:{\r\n                \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\"),\r\n                \"Content-Type\":\"application/json\"\r\n            },\r\n            body:JSON.stringify({\r\n                followId:userid\r\n            })\r\n        }).then(res=>res.json())\r\n        .then(data=>{\r\n            //console.log(data)\r\n            dispatch({type:\"UPDATE\",payload:{following:data.following,followers:data.followers}})\r\n            localStorage.setItem(\"user\",JSON.stringify(data))\r\n            setProfile((prevState=>{\r\n                return {\r\n                    //past state- i/p\r\n                    ...prevState,\r\n                    //new data\r\n                    user:{\r\n                        ...prevState.user,\r\n                        followers:[...prevState.user.followers,data._id]\r\n                    }\r\n                }\r\n            }))\r\n        })\r\n        setShowFollow(false)\r\n    }\r\n\r\n    const unfollowUser =()=>{\r\n        fetch('/unfollow',{\r\n            method:\"put\",\r\n            headers:{\r\n                \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\"),\r\n                \"Content-Type\":\"application/json\"\r\n            },\r\n            body:JSON.stringify({\r\n                unfollowId:userid\r\n            })\r\n        }).then(res=>res.json())\r\n        .then(data=>{\r\n            //console.log(data)\r\n            dispatch({type:\"UPDATE\",payload:{following:data.following,followers:data.followers}})\r\n            localStorage.setItem(\"user\",JSON.stringify(data))\r\n            \r\n            setProfile((prevState=>{\r\n                const newFollowers = prevState.user.followers.filter(item=>item !== data._id)\r\n                return {\r\n                    //past state- i/p\r\n                    ...prevState,\r\n                    //new data\r\n                    user:{\r\n                        ...prevState.user,\r\n                        followers:newFollowers\r\n                    }\r\n                }\r\n            }))\r\n        })\r\n        setShowFollow(true)\r\n    }\r\n\r\n    return(\r\n    <>\r\n    {userProfile ? \r\n     <div style={{maxWidth:\"550px\", margin:\"0px auto\"}}>\r\n         <div style={{\r\n             display:\"flex\",\r\n             justifyContent:\"space-around\",\r\n             margin:\"18px 0px\",\r\n             borderBottom:\"1px solid grey\"\r\n         }}>\r\n             <div>\r\n                <img style={{width:\"160px\", height:\"160px\", borderRadius:\"80px\"}}\r\n                src={userProfile.user.pic}\r\n                />\r\n             </div>\r\n\r\n             <div>\r\n                <h4> {userProfile.user.name} </h4>\r\n                <h6> {userProfile.user.email} </h6>\r\n                <h6> {userProfile.user.about} </h6>\r\n                <div style={{display:\"flex\",\r\n                justifyContent:\"space-between\",\r\n                width:\"110%\"\r\n            }}>\r\n                    <h6> {userProfile.posts.length} Posts </h6> \r\n                    <h6> {userProfile.user.followers.length} Followers </h6> \r\n                    <h6> {userProfile.user.following.length} Following </h6> \r\n                    <br></br>\r\n                   \r\n                </div>\r\n             </div>\r\n             {showfollow ?\r\n                <button className=\"btn waves-effect waves-light #64b5f6 blue darken-1\" onClick={()=>followUser()}>\r\n                    Follow\r\n                </button>\r\n                : <button className=\"btn waves-effect waves-light #64b5f6 blue darken-1\" onClick={()=>unfollowUser()}>\r\n                    Unfollow\r\n                </button>}\r\n            \r\n         </div>\r\n       \r\n         <div className=\"gallery\">\r\n             {\r\n                 userProfile.posts.map(item=>{\r\n                     return(\r\n                        <img key={item._id} className=\"item\" src={item.photo} alt={item.title}/>\r\n                     )\r\n                 })\r\n             }\r\n\r\n         </div>\r\n     </div>\r\n      : <h2> Loading </h2> }\r\n     </>\r\n    )\r\n}\r\n\r\nexport default Profile","D:\\KraftOnChain\\client\\src\\components\\screens\\LatestPassword.js",["188","189"],"D:\\KraftOnChain\\client\\src\\components\\screens\\CreatePost.js",["190"],{"ruleId":"191","replacedBy":"192"},{"ruleId":"193","replacedBy":"194"},{"ruleId":"195","severity":1,"message":"196","line":20,"column":10,"nodeType":"197","messageId":"198","endLine":20,"endColumn":15},{"ruleId":"199","severity":1,"message":"200","line":35,"column":5,"nodeType":"201","endLine":35,"endColumn":7,"suggestions":"202"},{"ruleId":"191","replacedBy":"203"},{"ruleId":"193","replacedBy":"204"},{"ruleId":"195","severity":1,"message":"205","line":6,"column":18,"nodeType":"197","messageId":"198","endLine":6,"endColumn":26},{"ruleId":"206","severity":1,"message":"207","line":33,"column":28,"nodeType":"208","messageId":"209","endLine":33,"endColumn":30},{"ruleId":"206","severity":1,"message":"207","line":58,"column":28,"nodeType":"208","messageId":"209","endLine":58,"endColumn":30},{"ruleId":"206","severity":1,"message":"207","line":85,"column":28,"nodeType":"208","messageId":"209","endLine":85,"endColumn":30},{"ruleId":"206","severity":1,"message":"207","line":121,"column":48,"nodeType":"208","messageId":"209","endLine":121,"endColumn":50},{"ruleId":"210","severity":1,"message":"211","line":131,"column":33,"nodeType":"212","endLine":131,"endColumn":56},{"ruleId":"199","severity":1,"message":"213","line":21,"column":7,"nodeType":"201","endLine":21,"endColumn":12,"suggestions":"214"},{"ruleId":"215","severity":1,"message":"216","line":45,"column":23,"nodeType":"217","messageId":"218","endLine":45,"endColumn":24,"suggestions":"219"},{"ruleId":"215","severity":1,"message":"216","line":45,"column":48,"nodeType":"217","messageId":"218","endLine":45,"endColumn":49,"suggestions":"220"},{"ruleId":"199","severity":1,"message":"221","line":62,"column":7,"nodeType":"201","endLine":62,"endColumn":14,"suggestions":"222"},{"ruleId":"210","severity":1,"message":"211","line":78,"column":17,"nodeType":"212","endLine":80,"endColumn":19},{"ruleId":"195","severity":1,"message":"196","line":7,"column":12,"nodeType":"197","messageId":"198","endLine":7,"endColumn":17},{"ruleId":"215","severity":1,"message":"216","line":12,"column":23,"nodeType":"217","messageId":"218","endLine":12,"endColumn":24,"suggestions":"223"},{"ruleId":"215","severity":1,"message":"216","line":12,"column":48,"nodeType":"217","messageId":"218","endLine":12,"endColumn":49,"suggestions":"224"},{"ruleId":"199","severity":1,"message":"225","line":41,"column":8,"nodeType":"201","endLine":41,"endColumn":13,"suggestions":"226"},{"ruleId":"199","severity":1,"message":"227","line":23,"column":7,"nodeType":"201","endLine":23,"endColumn":9,"suggestions":"228"},{"ruleId":"210","severity":1,"message":"211","line":98,"column":17,"nodeType":"212","endLine":100,"endColumn":19},{"ruleId":"195","severity":1,"message":"205","line":6,"column":18,"nodeType":"197","messageId":"198","endLine":6,"endColumn":26},{"ruleId":"206","severity":1,"message":"207","line":33,"column":28,"nodeType":"208","messageId":"209","endLine":33,"endColumn":30},{"ruleId":"206","severity":1,"message":"207","line":58,"column":28,"nodeType":"208","messageId":"209","endLine":58,"endColumn":30},{"ruleId":"206","severity":1,"message":"207","line":85,"column":28,"nodeType":"208","messageId":"209","endLine":85,"endColumn":30},{"ruleId":"206","severity":1,"message":"207","line":119,"column":48,"nodeType":"208","messageId":"209","endLine":119,"endColumn":50},{"ruleId":"210","severity":1,"message":"211","line":129,"column":33,"nodeType":"212","endLine":129,"endColumn":56},{"ruleId":"191","replacedBy":"229"},{"ruleId":"193","replacedBy":"230"},{"ruleId":"195","severity":1,"message":"231","line":1,"column":26,"nodeType":"197","messageId":"198","endLine":1,"endColumn":36},{"ruleId":"195","severity":1,"message":"232","line":2,"column":9,"nodeType":"197","messageId":"198","endLine":2,"endColumn":13},{"ruleId":"215","severity":1,"message":"216","line":10,"column":23,"nodeType":"217","messageId":"218","endLine":10,"endColumn":24,"suggestions":"233"},{"ruleId":"215","severity":1,"message":"216","line":10,"column":48,"nodeType":"217","messageId":"218","endLine":10,"endColumn":49,"suggestions":"234"},{"ruleId":"195","severity":1,"message":"231","line":1,"column":26,"nodeType":"197","messageId":"198","endLine":1,"endColumn":36},{"ruleId":"195","severity":1,"message":"232","line":2,"column":9,"nodeType":"197","messageId":"198","endLine":2,"endColumn":13},{"ruleId":"195","severity":1,"message":"235","line":4,"column":9,"nodeType":"197","messageId":"198","endLine":4,"endColumn":20},{"ruleId":"195","severity":1,"message":"196","line":20,"column":10,"nodeType":"197","messageId":"198","endLine":20,"endColumn":15},{"ruleId":"199","severity":1,"message":"200","line":35,"column":5,"nodeType":"201","endLine":35,"endColumn":7,"suggestions":"236"},{"ruleId":"199","severity":1,"message":"213","line":21,"column":7,"nodeType":"201","endLine":21,"endColumn":12,"suggestions":"237"},{"ruleId":"215","severity":1,"message":"216","line":45,"column":23,"nodeType":"217","messageId":"218","endLine":45,"endColumn":24,"suggestions":"238"},{"ruleId":"215","severity":1,"message":"216","line":45,"column":48,"nodeType":"217","messageId":"218","endLine":45,"endColumn":49,"suggestions":"239"},{"ruleId":"191","replacedBy":"240"},{"ruleId":"193","replacedBy":"241"},{"ruleId":"199","severity":1,"message":"221","line":62,"column":7,"nodeType":"201","endLine":62,"endColumn":14,"suggestions":"242"},{"ruleId":"210","severity":1,"message":"211","line":78,"column":17,"nodeType":"212","endLine":80,"endColumn":19},{"ruleId":"195","severity":1,"message":"205","line":6,"column":18,"nodeType":"197","messageId":"198","endLine":6,"endColumn":26},{"ruleId":"206","severity":1,"message":"207","line":33,"column":28,"nodeType":"208","messageId":"209","endLine":33,"endColumn":30},{"ruleId":"206","severity":1,"message":"207","line":58,"column":28,"nodeType":"208","messageId":"209","endLine":58,"endColumn":30},{"ruleId":"206","severity":1,"message":"207","line":85,"column":28,"nodeType":"208","messageId":"209","endLine":85,"endColumn":30},{"ruleId":"206","severity":1,"message":"207","line":119,"column":48,"nodeType":"208","messageId":"209","endLine":119,"endColumn":50},{"ruleId":"210","severity":1,"message":"211","line":129,"column":33,"nodeType":"212","endLine":129,"endColumn":56},{"ruleId":"195","severity":1,"message":"196","line":8,"column":12,"nodeType":"197","messageId":"198","endLine":8,"endColumn":17},{"ruleId":"215","severity":1,"message":"216","line":13,"column":23,"nodeType":"217","messageId":"218","endLine":13,"endColumn":24,"suggestions":"243"},{"ruleId":"215","severity":1,"message":"216","line":13,"column":48,"nodeType":"217","messageId":"218","endLine":13,"endColumn":49,"suggestions":"244"},{"ruleId":"195","severity":1,"message":"205","line":6,"column":18,"nodeType":"197","messageId":"198","endLine":6,"endColumn":26},{"ruleId":"206","severity":1,"message":"207","line":33,"column":28,"nodeType":"208","messageId":"209","endLine":33,"endColumn":30},{"ruleId":"206","severity":1,"message":"207","line":58,"column":28,"nodeType":"208","messageId":"209","endLine":58,"endColumn":30},{"ruleId":"206","severity":1,"message":"207","line":85,"column":28,"nodeType":"208","messageId":"209","endLine":85,"endColumn":30},{"ruleId":"206","severity":1,"message":"207","line":121,"column":48,"nodeType":"208","messageId":"209","endLine":121,"endColumn":50},{"ruleId":"210","severity":1,"message":"211","line":131,"column":33,"nodeType":"212","endLine":131,"endColumn":56},{"ruleId":"199","severity":1,"message":"227","line":23,"column":7,"nodeType":"201","endLine":23,"endColumn":9,"suggestions":"245"},{"ruleId":"210","severity":1,"message":"211","line":98,"column":17,"nodeType":"212","endLine":100,"endColumn":19},{"ruleId":"195","severity":1,"message":"231","line":1,"column":26,"nodeType":"197","messageId":"198","endLine":1,"endColumn":36},{"ruleId":"195","severity":1,"message":"232","line":2,"column":9,"nodeType":"197","messageId":"198","endLine":2,"endColumn":13},{"ruleId":"199","severity":1,"message":"225","line":41,"column":8,"nodeType":"201","endLine":41,"endColumn":13,"suggestions":"246"},"no-native-reassign",["247"],"no-negated-in-lhs",["248"],"no-unused-vars","'state' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'history'. Either include them or remove the dependency array.","ArrayExpression",["249"],["247"],["248"],"'dispatch' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useEffect has a missing dependency: 'uploadFields'. Either include it or remove the dependency array.",["250"],"no-useless-escape","Unnecessary escape character: \\[.","Literal","unnecessaryEscape",["251","252"],["253","254"],"React Hook useEffect has missing dependencies: 'dispatch' and 'state'. Either include them or remove the dependency array.",["255"],["256","257"],["258","259"],"React Hook useEffect has missing dependencies: 'body', 'history', and 'title'. Either include them or remove the dependency array.",["260"],"React Hook useEffect has a missing dependency: 'userid'. Either include it or remove the dependency array.",["261"],["247"],["248"],"'useContext' is defined but never used.","'Link' is defined but never used.",["262","263"],["264","265"],"'UserContext' is defined but never used.",["266"],["267"],["268","269"],["270","271"],["247"],["248"],["272"],["273","274"],["275","276"],["277"],["278"],"no-global-assign","no-unsafe-negation",{"desc":"279","fix":"280"},{"desc":"281","fix":"282"},{"messageId":"283","fix":"284","desc":"285"},{"messageId":"286","fix":"287","desc":"288"},{"messageId":"283","fix":"289","desc":"285"},{"messageId":"286","fix":"290","desc":"288"},{"desc":"291","fix":"292"},{"messageId":"283","fix":"293","desc":"285"},{"messageId":"286","fix":"294","desc":"288"},{"messageId":"283","fix":"295","desc":"285"},{"messageId":"286","fix":"296","desc":"288"},{"desc":"297","fix":"298"},{"desc":"299","fix":"300"},{"messageId":"283","fix":"301","desc":"285"},{"messageId":"286","fix":"302","desc":"288"},{"messageId":"283","fix":"303","desc":"285"},{"messageId":"286","fix":"304","desc":"288"},{"desc":"279","fix":"305"},{"desc":"281","fix":"306"},{"messageId":"283","fix":"307","desc":"285"},{"messageId":"286","fix":"308","desc":"288"},{"messageId":"283","fix":"309","desc":"285"},{"messageId":"286","fix":"310","desc":"288"},{"desc":"291","fix":"311"},{"messageId":"283","fix":"312","desc":"285"},{"messageId":"286","fix":"313","desc":"288"},{"messageId":"283","fix":"314","desc":"285"},{"messageId":"286","fix":"315","desc":"288"},{"desc":"299","fix":"316"},{"desc":"297","fix":"317"},"Update the dependencies array to be: [dispatch, history]",{"range":"318","text":"319"},"Update the dependencies array to be: [uploadFields, url]",{"range":"320","text":"321"},"removeEscape",{"range":"322","text":"323"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"324","text":"325"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"326","text":"323"},{"range":"327","text":"325"},"Update the dependencies array to be: [dispatch, image, state]",{"range":"328","text":"329"},{"range":"330","text":"323"},{"range":"331","text":"325"},{"range":"332","text":"323"},{"range":"333","text":"325"},"Update the dependencies array to be: [body, history, title, url]",{"range":"334","text":"335"},"Update the dependencies array to be: [userid]",{"range":"336","text":"337"},{"range":"338","text":"323"},{"range":"339","text":"325"},{"range":"340","text":"323"},{"range":"341","text":"325"},{"range":"342","text":"319"},{"range":"343","text":"321"},{"range":"344","text":"323"},{"range":"345","text":"325"},{"range":"346","text":"323"},{"range":"347","text":"325"},{"range":"348","text":"329"},{"range":"349","text":"323"},{"range":"350","text":"325"},{"range":"351","text":"323"},{"range":"352","text":"325"},{"range":"353","text":"337"},{"range":"354","text":"335"},[1235,1237],"[dispatch, history]",[581,586],"[uploadFields, url]",[1243,1244],"",[1243,1243],"\\",[1268,1269],[1268,1268],[2167,2174],"[dispatch, image, state]",[432,433],[432,432],[457,458],[457,457],[1275,1280],"[body, history, title, url]",[753,755],"[userid]",[297,298],[297,297],[322,323],[322,322],[1235,1237],[581,586],[1243,1244],[1243,1243],[1268,1269],[1268,1268],[2167,2174],[466,467],[466,466],[491,492],[491,491],[753,755],[1275,1280]]
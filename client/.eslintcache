[{"D:\\Insta-Clone\\client\\src\\reportWebVitals.js":"1","D:\\Insta-Clone\\client\\src\\App.js":"2","D:\\Insta-Clone\\client\\src\\components\\Navbar.js":"3","D:\\Insta-Clone\\client\\src\\components\\screens\\Home.js":"4","D:\\Insta-Clone\\client\\src\\components\\screens\\Signup.js":"5","D:\\Insta-Clone\\client\\src\\components\\screens\\Profile.js":"6","D:\\Insta-Clone\\client\\src\\components\\screens\\SignIn.js":"7","D:\\Insta-Clone\\client\\src\\components\\screens\\CreatePost.js":"8","D:\\Insta-Clone\\client\\src\\index.js":"9","D:\\Insta-Clone\\client\\src\\reducers\\userReducer.js":"10","D:\\Insta-Clone\\client\\src\\components\\screens\\UserProfile.js":"11","D:\\Insta-Clone\\client\\src\\components\\screens\\FollowedUsers.js":"12","D:\\Insta-Clone\\client\\src\\components\\screens\\ResetPassword.js":"13","D:\\Insta-Clone\\client\\src\\components\\screens\\LatestPassword.js":"14","D:\\KraftOnChain\\client\\src\\App.js":"15","D:\\KraftOnChain\\client\\src\\components\\screens\\Signup.js":"16","D:\\KraftOnChain\\client\\src\\components\\screens\\Profile.js":"17","D:\\KraftOnChain\\client\\src\\reducers\\userReducer.js":"18","D:\\KraftOnChain\\client\\src\\components\\screens\\FollowedUsers.js":"19","D:\\KraftOnChain\\client\\src\\components\\Navbar.js":"20","D:\\KraftOnChain\\client\\src\\components\\screens\\SignIn.js":"21","D:\\KraftOnChain\\client\\src\\components\\screens\\Home.js":"22","D:\\KraftOnChain\\client\\src\\reportWebVitals.js":"23","D:\\KraftOnChain\\client\\src\\components\\screens\\UserProfile.js":"24","D:\\KraftOnChain\\client\\src\\components\\screens\\LatestPassword.js":"25","D:\\KraftOnChain\\client\\src\\components\\screens\\CreatePost.js":"26","D:\\KraftOnChain\\client\\src\\index.js":"27","D:\\KraftOnChain\\client\\src\\components\\screens\\ResetPassword.js":"28","D:\\KraftOnChain\\client\\src\\components\\screens\\CheckCraft.js":"29","D:\\KraftOnChain\\client\\src\\components\\screens\\chatcomponents\\TextContainer\\TextContainer.js":"30","D:\\KraftOnChain\\client\\src\\components\\screens\\chatcomponents\\Messages\\Message\\Message.js":"31","D:\\KraftOnChain\\client\\src\\components\\screens\\ShipCraft.js":"32","D:\\KraftOnChain\\client\\src\\components\\screens\\Join.js":"33","D:\\KraftOnChain\\client\\src\\components\\screens\\chatcomponents\\InfoBar\\InfoBar.js":"34","D:\\KraftOnChain\\client\\src\\components\\screens\\chatcomponents\\Messages\\Messages.js":"35","D:\\KraftOnChain\\client\\src\\components\\screens\\chatcomponents\\Input\\Input.js":"36","D:\\KraftOnChain\\client\\src\\components\\screens\\AddCraft.js":"37","D:\\KraftOnChain\\client\\src\\components\\screens\\Timeline.js":"38","D:\\KraftOnChain\\client\\src\\components\\screens\\Chat.js":"39","D:\\KraftOnChain\\client\\src\\components\\screens\\Tour.js":"40"},{"size":362,"mtime":499162500000,"results":"41","hashOfConfig":"42"},{"size":2104,"mtime":1606753040468,"results":"43","hashOfConfig":"42"},{"size":3233,"mtime":1606759431982,"results":"44","hashOfConfig":"42"},{"size":6344,"mtime":1606730729443,"results":"45","hashOfConfig":"42"},{"size":4139,"mtime":1606754227401,"results":"46","hashOfConfig":"42"},{"size":4924,"mtime":1606735245292,"results":"47","hashOfConfig":"42"},{"size":2652,"mtime":1606754302752,"results":"48","hashOfConfig":"42"},{"size":3078,"mtime":1606497098545,"results":"49","hashOfConfig":"42"},{"size":500,"mtime":499162500000,"results":"50","hashOfConfig":"42"},{"size":588,"mtime":1606733112242,"results":"51","hashOfConfig":"42"},{"size":4795,"mtime":1606729357344,"results":"52","hashOfConfig":"42"},{"size":6179,"mtime":1606717512083,"results":"53","hashOfConfig":"42"},{"size":2264,"mtime":1606751451305,"results":"54","hashOfConfig":"42"},{"size":2253,"mtime":1606753957752,"results":"55","hashOfConfig":"42"},{"size":2861,"mtime":1607095064496,"results":"56","hashOfConfig":"57"},{"size":5390,"mtime":1607086312569,"results":"58","hashOfConfig":"57"},{"size":4922,"mtime":1606801501153,"results":"59","hashOfConfig":"57"},{"size":588,"mtime":1606733112242,"results":"60","hashOfConfig":"57"},{"size":6179,"mtime":1606717512083,"results":"61","hashOfConfig":"57"},{"size":3597,"mtime":1607095429961,"results":"62","hashOfConfig":"57"},{"size":3244,"mtime":1607103017674,"results":"63","hashOfConfig":"57"},{"size":6441,"mtime":1606802520992,"results":"64","hashOfConfig":"57"},{"size":362,"mtime":499162500000,"results":"65","hashOfConfig":"57"},{"size":4795,"mtime":1606801872701,"results":"66","hashOfConfig":"57"},{"size":2253,"mtime":1606753957752,"results":"67","hashOfConfig":"57"},{"size":3078,"mtime":1606497098545,"results":"68","hashOfConfig":"57"},{"size":500,"mtime":499162500000,"results":"69","hashOfConfig":"57"},{"size":2264,"mtime":1606751451305,"results":"70","hashOfConfig":"57"},{"size":2450,"mtime":1607095392690,"results":"71","hashOfConfig":"57"},{"size":1023,"mtime":1606804717207,"results":"72","hashOfConfig":"57"},{"size":1011,"mtime":1606769732744,"results":"73","hashOfConfig":"57"},{"size":4107,"mtime":1606726755579,"results":"74","hashOfConfig":"57"},{"size":1229,"mtime":1606805790112,"results":"75","hashOfConfig":"57"},{"size":545,"mtime":1606770363320,"results":"76","hashOfConfig":"57"},{"size":391,"mtime":1606769658929,"results":"77","hashOfConfig":"57"},{"size":526,"mtime":1606769612304,"results":"78","hashOfConfig":"57"},{"size":2726,"mtime":1606736815130,"results":"79","hashOfConfig":"57"},{"size":3746,"mtime":1607097677587,"results":"80","hashOfConfig":"57"},{"size":1902,"mtime":1606804102282,"results":"81","hashOfConfig":"57"},{"size":2579,"mtime":1607104231116,"results":"82","hashOfConfig":"57"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},"1bbv6oa",{"filePath":"86","messages":"87","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"91"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"91"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"91"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"91"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"91"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"91"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"117"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"91"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"91"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1i8w1ue",{"filePath":"126","messages":"127","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"132"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"138"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"141","messages":"142","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"143","messages":"144","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"146"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"152"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"135"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"135"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"135"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"168","messages":"169","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"135"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"146"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"180","messages":"181","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"146"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"185","messages":"186","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"135"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190"},"D:\\Insta-Clone\\client\\src\\reportWebVitals.js",[],["191","192"],"D:\\Insta-Clone\\client\\src\\App.js",["193","194"],"import React, {createContext, useContext, useEffect, useReducer} from 'react';\nimport NavBar from './components/Navbar'\nimport \"./App.css\"\nimport {BrowserRouter, Route, Switch, useHistory} from 'react-router-dom'\nimport Home from './components/screens/Home'\nimport Signin from './components/screens/SignIn'\nimport Signup from './components/screens/Signup'\nimport Profile from './components/screens/Profile'\nimport CreatePost from './components/screens/CreatePost'\nimport UserProfile from './components/screens/UserProfile'\nimport ResetPassword from './components/screens/ResetPassword'\nimport LatestPassword from './components/screens/LatestPassword'\nimport FollowedPosts from './components/screens/FollowedUsers'\nimport {reducer, initialState} from './reducers/userReducer'\n\nexport const UserContext = createContext()\n\nconst Routing = () =>{\n  const history = useHistory()\n  const {state, dispatch} = useContext(UserContext)\n  useEffect(()=>{\n    const user = JSON.parse(localStorage.getItem(\"user\"))\n    if(user)\n    {\n      dispatch({type:\"USER\",payload:user})\n      //history.push('/')\n    }\n    else\n    {\n      if(!history.location.pathname.startsWith('/resetPassword'))\n      {\n        history.push('/signin')\n      }\n    }\n  },[])\n\n  return(\n    <Switch>\n       <Route exact path=\"/\"><Home/></Route>\n        <Route path=\"/signin\"> <Signin/> </Route>\n        <Route path=\"/signup\"><Signup/></Route>\n        <Route exact path=\"/profile\"> <Profile/> </Route>\n        <Route path=\"/create\"><CreatePost/></Route>\n        <Route path=\"/followersposts\"> <FollowedPosts/> </Route>\n        <Route path=\"/profile/:userid\"><UserProfile/></Route>\n        <Route exact path=\"/resetPassword\"> <ResetPassword/> </Route>\n        <Route path=\"/resetPassword/:token\"> <LatestPassword/> </Route>\n    </Switch>\n  )\n}\n\nfunction App() {\n  const [state, dispatch] = useReducer(reducer, initialState)\n  return (\n    <UserContext.Provider value={{state, dispatch}}>\n        <BrowserRouter>\n            <NavBar/>\n            <Routing/>\n        </BrowserRouter>\n    </UserContext.Provider>\n   \n  );\n}\n\nexport default App;\n ","D:\\Insta-Clone\\client\\src\\components\\Navbar.js",[],["195","196"],"D:\\Insta-Clone\\client\\src\\components\\screens\\Home.js",["197","198","199","200","201","202"],"import React,{useState,useEffect,useContext} from 'react'\r\nimport {UserContext} from '../../App'\r\nimport {Link} from 'react-router-dom'\r\nconst Home  = ()=>{\r\n    const [data,setData] = useState([])\r\n    const {state,dispatch} = useContext(UserContext)\r\n    useEffect(()=>{\r\n       fetch('/allpost',{\r\n           headers:{\r\n               \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\r\n           }\r\n       }).then(res=>res.json())\r\n       .then(result=>{\r\n           console.log(result)\r\n           setData(result.posts)\r\n       })\r\n    },[])\r\n\r\n    const likePost = (id)=>{\r\n          fetch('/like',{\r\n              method:\"put\",\r\n              headers:{\r\n                  \"Content-Type\":\"application/json\",\r\n                  \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\r\n              },\r\n              body:JSON.stringify({\r\n                  postId:id\r\n              })\r\n          }).then(res=>res.json())\r\n          .then(result=>{\r\n                   //   console.log(result)\r\n            const newData = data.map(item=>{\r\n                if(item._id==result._id){\r\n                    return result\r\n                }else{\r\n                    return item\r\n                }\r\n            })\r\n            setData(newData)\r\n          }).catch(err=>{\r\n              console.log(err)\r\n          })\r\n    }\r\n    const unlikePost = (id)=>{\r\n          fetch('/dislike',{\r\n              method:\"put\",\r\n              headers:{\r\n                  \"Content-Type\":\"application/json\",\r\n                  \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\r\n              },\r\n              body:JSON.stringify({\r\n                  postId:id\r\n              })\r\n          }).then(res=>res.json())\r\n          .then(result=>{\r\n            //   console.log(result)\r\n            const newData = data.map(item=>{\r\n                if(item._id==result._id){\r\n                    return result\r\n                }else{\r\n                    return item\r\n                }\r\n            })\r\n            setData(newData)\r\n          }).catch(err=>{\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n    const makeComment = (text,postId)=>{\r\n          fetch('/comment',{\r\n              method:\"put\",\r\n              headers:{\r\n                  \"Content-Type\":\"application/json\",\r\n                  \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\r\n              },\r\n              body:JSON.stringify({\r\n                  postId,\r\n                  text\r\n              })\r\n          }).then(res=>res.json())\r\n          .then(result=>{\r\n              console.log(result)\r\n              const newData = data.map(item=>{\r\n                if(item._id==result._id){\r\n                    return result\r\n                }else{\r\n                    return item\r\n                }\r\n             })\r\n            setData(newData)\r\n          }).catch(err=>{\r\n              console.log(err)\r\n          })\r\n    }\r\n\r\n    const deletePost = (postid)=>{\r\n        fetch(`/deletepost/${postid}`,{\r\n            method:\"delete\",\r\n            headers:{\r\n                Authorization:\"Bearer \"+localStorage.getItem(\"jwt\")\r\n            }\r\n        }).then(res=>res.json())\r\n        .then(result=>{\r\n            console.log(result)\r\n            const newData = data.filter(item=>{\r\n                return item._id !== result._id\r\n            })\r\n            setData(newData)\r\n        })\r\n    }\r\n   return (\r\n       <div className=\"home\">\r\n           {\r\n               data.map(item=>{\r\n                   return(\r\n                       <div className=\"card home-card\" key={item._id}>\r\n                           {/* <img src={state.pic}/> */}\r\n                           {/* <img src={item.postedBy._id == state._id ? state.pic: item.postedBy.pic}/> */}\r\n                            <h5 style={{padding:\"5px\"}}><Link to={item.postedBy._id !== state._id?\"/profile/\"+item.postedBy._id :\"/profile\"  }>{item.postedBy.name}</Link> \r\n                            {item.postedBy._id == state._id \r\n                            && <i className=\"material-icons\" style={{\r\n                                float:\"right\",\r\n                                color:\"red\"\r\n                            }} \r\n                            onClick={()=>deletePost(item._id)}\r\n                            >delete</i>\r\n\r\n                            }</h5>\r\n                            <div className=\"card-image\">\r\n                                <img src={item.photo}/>\r\n                            </div>\r\n                            <div className=\"card-content\">\r\n                            <i className=\"material-icons\" style={{color:\"red\"}}>favorite</i>\r\n                            {item.likes.includes(state._id)\r\n                            ? \r\n                             <i className=\"material-icons\"\r\n                                    onClick={()=>{unlikePost(item._id)}}\r\n                              >thumb_down</i>\r\n                            : \r\n                            <i className=\"material-icons\"\r\n                            onClick={()=>{likePost(item._id)}}\r\n                            >thumb_up</i>\r\n                            }\r\n                            \r\n                           \r\n                                <h6>{item.likes.length} likes</h6>\r\n                                <h6>{item.title}</h6>\r\n                                <p>{item.body}</p>\r\n                                {\r\n                                    item.comments.map(record=>{\r\n                                        return(\r\n                                        <h6 key={record._id}><span style={{fontWeight:\"500\"}}>{record.postedBy.name}</span> {record.text}</h6>\r\n                                        )\r\n                                    })\r\n                                }\r\n                                <form onSubmit={(e)=>{\r\n                                    e.preventDefault()\r\n                                    makeComment(e.target[0].value,item._id)\r\n                                }}>\r\n                                  <input type=\"text\" placeholder=\"add a comment\" />  \r\n                                </form>\r\n                                \r\n                            </div>\r\n                        </div> \r\n                   )\r\n               })\r\n           }\r\n          \r\n          \r\n       </div>\r\n   )\r\n}\r\n\r\n\r\nexport default Home","D:\\Insta-Clone\\client\\src\\components\\screens\\Signup.js",["203","204","205"],"import React, {useState, useEffect} from 'react'\r\nimport {Link, useHistory} from 'react-router-dom'\r\nimport M from 'materialize-css'\r\n\r\nconst Signup = () =>{\r\n    const history = useHistory()\r\n    const [name, setName] = useState(\"\")\r\n    const [password, setPassword] = useState(\"\")\r\n    const [email, setEmail] = useState(\"\")\r\n    const [about, setAbout] = useState(\"\")\r\n    const [image, setImage] = useState(\"\")\r\n    const [url, setUrl] = useState(undefined)\r\n\r\n    //mount field\r\n    useEffect(()=>{\r\n        if(url)\r\n        {\r\n            uploadFields()\r\n        }\r\n\r\n    },[url])\r\n    \r\n    //profile update\r\n    const uploadPic = () =>{\r\n        const data = new FormData()\r\n        data.append(\"file\",image)\r\n        data.append(\"upload_preset\",\"chordsNstrings\")\r\n        data.append(\"cloud_name\", \"chordsnstrings\")\r\n        fetch(\"https://api.cloudinary.com/v1_1/chordsnstrings/image/upload\",{\r\n            method:\"post\",\r\n            body:data\r\n        })\r\n        .then(res=>res.json())\r\n        .then(data=>{\r\n            setUrl(data.url)\r\n            //console.log(data.url)\r\n        })\r\n        .catch(err=>{\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n    const uploadFields =() =>{\r\n          \r\n        if(!/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(email))\r\n        {\r\n            M.toast({html:\"Enter a valid email\", classes:\"#82b1ff blue darken-1\"})\r\n            return\r\n        }\r\n\r\n        fetch(\"/signup\",{\r\n            method:\"post\",\r\n            headers:{\r\n                \"Content-Type\":\"application/json\"\r\n            },\r\n            body: JSON.stringify({\r\n                name,\r\n                password,\r\n                email,\r\n                about,\r\n                pic:url\r\n            })\r\n        }).then(res=>\r\n            res.json())\r\n        .then(data=>{\r\n           if(data.error)\r\n           {\r\n               M.toast({html: data.error, classes:\"#82b1ff blue darken-1\"})\r\n           }\r\n           else{\r\n               M.toast({html:data.message, classes: \"#00e676 green accent-3\"})\r\n               history.push('/signin')\r\n           }\r\n        }).catch(err=>{\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n    const PostData = ()=>{\r\n        if(image)\r\n        {\r\n            uploadPic()\r\n        }\r\n        else\r\n        {\r\n            uploadFields()\r\n        }\r\n      \r\n    }\r\n\r\n    return(\r\n        <div className=\"mycard\">\r\n             <div className=\"card auth-card input-field\">\r\n                <h2> Chords 'N' Strings </h2>\r\n                <input type=\"text\" \r\n                placeholder=\"Name\" \r\n                value={name} \r\n                onChange={(e)=>setName(e.target.value)}/>\r\n\r\n                <input type=\"text\" \r\n                placeholder=\"Email\"\r\n                value={email}\r\n                onChange= {(e)=> setEmail(e.target.value)}/>\r\n\r\n                <input type=\"password\" \r\n                placeholder=\"Password\"\r\n                value={password}\r\n                onChange={(e)=> setPassword(e.target.value)}/>\r\n\r\n                <input type=\"text\" \r\n                placeholder=\"About you\"\r\n                value={about}\r\n                onChange={(e)=> setAbout(e.target.value)}/>\r\n\r\n            <div className=\"file-field input-field\">\r\n                <div className=\"btn #64b5f6 blue darken-1\">\r\n                    <span> Profile Picture </span>\r\n                    <input type=\"file\"\r\n                    onChange={(e)=>setImage(e.target.files[0])}/>\r\n                </div>\r\n                <div className=\"file-path-wrapper\">\r\n                    <input className=\"file-path validate\" type=\"text\"/>\r\n                </div>\r\n            </div>\r\n                <button className=\"btn waves-effect waves-light #64b5f6 blue darken-1\" onClick={()=>PostData()}>\r\n                    Sign Up\r\n                </button>\r\n                <h5>\r\n                    <Link to=\"/signin\"> Have an account already ? </Link>\r\n                </h5>\r\n               \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Signup","D:\\Insta-Clone\\client\\src\\components\\screens\\Profile.js",["206","207"],"\r\nimport React, {useEffect, useState, useContext} from 'react'\r\nimport {UserContext} from '../../App'\r\n\r\nconst Profile = () =>{\r\n    const [mypics, setPics] = useState([])\r\n    const [image, setImage] = useState(\"\")\r\n    //const [url, setUrl] = useState(\"\")\r\n    const {state, dispatch} = useContext(UserContext)\r\n    console.log(state)\r\n    useEffect(()=>{\r\n        fetch('/mypost',{\r\n            headers:{\r\n                \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\r\n            }\r\n        }).then(res=>res.json())\r\n        .then(result=>{\r\n            setPics(result.mypost)\r\n        })\r\n    },[])\r\n\r\n    useEffect(()=>{\r\n        if(image)\r\n        {\r\n            const data = new FormData()\r\n            data.append(\"file\",image)\r\n            data.append(\"upload_preset\",\"chordsNstrings\")\r\n            data.append(\"cloud_name\", \"chordsnstrings\")\r\n            fetch(\"https://api.cloudinary.com/v1_1/chordsnstrings/image/upload\",{\r\n                method:\"post\",\r\n                body:data\r\n            })\r\n            .then(res=>res.json())\r\n            .then(data=>{\r\n                //setUrl(data.url)\r\n                // localStorage.setItem(\"user\",JSON.stringify({...state, pic:data.url}))\r\n                // //console.log(data.url)\r\n                // dispatch({type:\"PICUPDATE\", payload:data.url})\r\n                fetch('/updatepic',{\r\n                    method:\"put\",\r\n                    headers:{\r\n                        \"Content-type\":\"application/json\",\r\n                        \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\r\n                    },\r\n                    body:JSON.stringify({\r\n                        pic:data.url\r\n                    })\r\n                }).then(res=>res.json())\r\n                .then(result=>{\r\n                    console.log(result)\r\n                    localStorage.setItem(\"user\",JSON.stringify({...state, pic:data.pic}))\r\n                    dispatch({type:\"PICUPDATE\", payload:result.pic})\r\n                    // window.location.reload()\r\n                })\r\n               \r\n            })\r\n            .catch(err=>{\r\n                console.log(err)\r\n            })\r\n        }\r\n\r\n    },[image])\r\n\r\n    const updatePicture = (file)=>{\r\n        setImage(file)\r\n  \r\n    }\r\n\r\n    return(\r\n     <div style={{maxWidth:\"550px\", margin:\"0px auto\"}}>\r\n         <div style={{\r\n             display:\"flex\",\r\n             justifyContent:\"space-around\",\r\n             margin:\"18px 0px\",\r\n             borderBottom:\"1px solid grey\"\r\n         }}>\r\n             <div>\r\n                <img style={{width:\"160px\", height:\"160px\", borderRadius:\"80px\"}}\r\n                src={state?state.pic:\"Loading\"}\r\n                />\r\n             </div>\r\n\r\n             {/* <div>\r\n                <h4> {state?state.name:\"Loading\"} </h4>\r\n                <div style={{display:\"flex\",\r\n                justifyContent:\"space-between\",\r\n                width:\"110%\"\r\n            }}>\r\n                    <h6> {mypics.length} posts </h6> \r\n                    <h6> {state?state.followers.length:\"0\"} Followers </h6> \r\n                    <h6> {state?state.following.length:\"0\"} Following </h6> \r\n                </div>\r\n             </div> */}\r\n              <div>\r\n                   <h4>{state?state.name:\"loading\"}</h4>\r\n                   <h5>{state?state.email:\"loading\"}</h5>\r\n                   <h5>{state?state.about:\"loading\"}</h5>\r\n                   <hr></hr>\r\n                   <div style={{display:\"flex\",justifyContent:\"space-between\",width:\"108%\"}}>\r\n                       <h6>{mypics.length} posts</h6>\r\n                        {/* <h6>0 Followers </h6>\r\n                       <h6>0 Following</h6>  */}\r\n                       <h6>{state?state.followers.length:\"0\"} followers</h6> \r\n                        <h6>{state?state.following.length:\"0\"} following</h6>\r\n                   </div>\r\n\r\n               </div>\r\n               {/* <button className=\"btn waves-effect waves-light #64b5f6 blue darken-1\"\r\n               onClick={()=> updatePicture()}>\r\n                  Change DP\r\n                </button> */}\r\n\r\n            <div className=\"file-field input-field\">\r\n                <div className=\"btn #64b5f6 blue darken-1\">\r\n                    <span> Change DP </span>\r\n                    <input type=\"file\"\r\n                    onChange={(e)=>updatePicture(e.target.files[0])}/>\r\n                </div>\r\n                {/* <div className=\"file-path-wrapper\">\r\n                    <input className=\"file-path validate\" type=\"text\"/>\r\n                </div> */}\r\n            </div>\r\n         </div>\r\n     \r\n         <div className=\"gallery\">\r\n             {\r\n                 mypics.map(item=>{\r\n                     return(\r\n                        <img key={item._id} className=\"item\" src={item.photo} alt={item.title}/>\r\n                     )\r\n                 })\r\n             }\r\n\r\n         </div>\r\n     </div>\r\n    )\r\n}\r\n\r\nexport default Profile","D:\\Insta-Clone\\client\\src\\components\\screens\\SignIn.js",["208","209","210"],"import React, {useState, useContext} from 'react'\r\nimport {Link, useHistory} from 'react-router-dom'\r\nimport M from 'materialize-css'\r\nimport {UserContext} from '../../App'\r\n\r\nconst SignIn = () =>{\r\n    const {state, dispatch} = useContext(UserContext)\r\n    const history = useHistory()\r\n    const [password, setPassword] = useState(\"\")\r\n    const [email, setEmail] = useState(\"\")\r\n    const PostData = ()=>{\r\n        if(!/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(email))\r\n        {\r\n            M.toast({html:\"Enter a valid email\", classes:\"#82b1ff blue darken-1\"})\r\n            return\r\n        }\r\n\r\n        fetch(\"/signin\",{\r\n            method:\"post\",\r\n            headers:{\r\n                \"Content-Type\":\"application/json\"\r\n            },\r\n            body: JSON.stringify({\r\n                password,\r\n                email\r\n            })\r\n        }).then(res=>\r\n            res.json())\r\n        .then(data=>{\r\n            console.log(data)\r\n           if(data.error)\r\n           {\r\n               M.toast({html: data.error, classes:\"#82b1ff blue darken-1\"})\r\n           }\r\n           else{\r\n               localStorage.setItem(\"jwt\",data.token)\r\n               localStorage.setItem(\"user\",JSON.stringify(data.user))\r\n               dispatch({type:\"USER\",payload:data.user})\r\n               M.toast({html:\"SignIn successful\", classes: \"#00e676 green accent-3\"})\r\n               history.push('/')\r\n           }\r\n        }).catch(err=>{\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n    return(\r\n        <body class=\"bg\">\r\n        <div className=\"mycard\">\r\n             <div className=\"card auth-card input-field\">\r\n                <h2> Chords 'N' Strings </h2>\r\n                <input type=\"text\" \r\n                placeholder=\"Email\"\r\n                value={email}\r\n                onChange= {(e)=> setEmail(e.target.value)}/>\r\n\r\n                <input type=\"password\" \r\n                placeholder=\"Password\"\r\n                value={password}\r\n                onChange={(e)=> setPassword(e.target.value)}/>\r\n\r\n                <button className=\"btn waves-effect waves-light #64b5f6 blue darken-1\"\r\n                onClick={()=> PostData()}>\r\n                    Login\r\n                </button>\r\n\r\n                <h5>\r\n                    <Link to=\"/signup\"> Don't have an account ? </Link>\r\n                </h5>\r\n                <h6>\r\n                    <Link to=\"/resetPassword\"> Forgot password ? </Link>\r\n                </h6>\r\n            </div>\r\n        </div>\r\n        </body>\r\n    )\r\n}\r\n\r\nexport default SignIn","D:\\Insta-Clone\\client\\src\\components\\screens\\CreatePost.js",["211"],"import React, { useState, useEffect } from 'react'\r\nimport M from 'materialize-css'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nconst CreatePost = () =>{\r\n\r\n    const history = useHistory()\r\n    const [title, setTitle] = useState(\"\")\r\n    const [body, setBody] = useState(\"\")\r\n    const [image, setImage] = useState(\"\")\r\n    const [url, setUrl] = useState(\"\")\r\n\r\n\r\n    useEffect(()=>{\r\n        if(url)\r\n        {\r\n            fetch(\"/createpost\",{\r\n                method:\"post\",\r\n                headers:{\r\n                    \"Content-Type\":\"application/json\",\r\n                    \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\r\n                },\r\n                body: JSON.stringify({\r\n                    title,\r\n                    body,\r\n                    pic:url\r\n                })\r\n            }).then(res=> res.json())\r\n            .then(data=>{\r\n               if(data.error){\r\n                  M.toast({html: data.error,classes:\"#c62828 red darken-3\"})\r\n               }\r\n               else{\r\n                   M.toast({html:\"Created post Successfully\",classes:\"#43a047 green darken-1\"})\r\n                   history.push('/')\r\n               }\r\n            }).catch(err=>{\r\n                console.log(err)\r\n            })\r\n        }\r\n    }, [url])\r\n    \r\n   \r\n    const postDetails=()=>{\r\n        const data = new FormData()\r\n        data.append(\"file\",image)\r\n        data.append(\"upload_preset\",\"chordsNstrings\")\r\n        data.append(\"cloud_name\", \"chordsnstrings\")\r\n        fetch(\"https://api.cloudinary.com/v1_1/chordsnstrings/image/upload\",{\r\n            method:\"post\",\r\n            body:data\r\n        })\r\n        .then(res=>res.json())\r\n        .then(data=>{\r\n            setUrl(data.url)\r\n            console.log(data.url)\r\n        })\r\n        .catch(err=>{\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n\r\n    return(\r\n        <div className=\"card input-field\"\r\n        style={{\r\n            margin: \"30px auto\",\r\n            maxWidth:\"500px\",\r\n            padding:\"20px\",\r\n            textAlign: \"center\"\r\n        }}>\r\n            <input type=\"text\" \r\n            placeholder=\"Title\"\r\n            value = {title}\r\n            onChange= {(e)=>setTitle(e.target.value)}/>\r\n\r\n            <input type=\"text\" \r\n            placeholder=\"Body\"\r\n            value={body}\r\n            onChange={(e)=> setBody(e.target.value)}/>\r\n\r\n            <div className=\"file-field input-field\">\r\n                <div className=\"btn #64b5f6 blue darken-1\">\r\n                    <span> Upload Image</span>\r\n                    <input type=\"file\"\r\n                    onChange={(e)=>setImage(e.target.files[0])}/>\r\n                </div>\r\n                <div className=\"file-path-wrapper\">\r\n                    <input className=\"file-path validate\" type=\"text\"/>\r\n                </div>\r\n            </div>\r\n             <button className=\"btn waves-effect waves-light #64b5f6 blue darken-1\"\r\n                 onClick={()=> postDetails()}>\r\n                    Submit post\r\n            </button>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CreatePost","D:\\Insta-Clone\\client\\src\\index.js",[],"D:\\Insta-Clone\\client\\src\\reducers\\userReducer.js",[],"D:\\Insta-Clone\\client\\src\\components\\screens\\UserProfile.js",["212","213"],"\r\nimport React, {useEffect, useState, useContext} from 'react'\r\nimport {UserContext} from '../../App'\r\nimport {useParams} from 'react-router-dom'\r\n\r\nconst Profile = () =>{\r\n    const [userProfile, setProfile] = useState(null)\r\n    const {state, dispatch} = useContext(UserContext)\r\n    const {userid} = useParams()\r\n    const [showfollow, setShowFollow] = useState(state?!state.following.includes(userid):true)\r\n    console.log(userid)\r\n    useEffect(()=>{\r\n        fetch(`/user/${userid}`,{\r\n            headers:{\r\n                \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\r\n            }\r\n        }).then(res=>res.json())\r\n        .then(result=>{\r\n          //console.log(result)\r\n         \r\n          setProfile(result)\r\n        })\r\n    },[])\r\n\r\n    const followUser =()=>{\r\n        fetch('/follow',{\r\n            method:\"put\",\r\n            headers:{\r\n                \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\"),\r\n                \"Content-Type\":\"application/json\"\r\n            },\r\n            body:JSON.stringify({\r\n                followId:userid\r\n            })\r\n        }).then(res=>res.json())\r\n        .then(data=>{\r\n            //console.log(data)\r\n            dispatch({type:\"UPDATE\",payload:{following:data.following,followers:data.followers}})\r\n            localStorage.setItem(\"user\",JSON.stringify(data))\r\n            setProfile((prevState=>{\r\n                return {\r\n                    //past state- i/p\r\n                    ...prevState,\r\n                    //new data\r\n                    user:{\r\n                        ...prevState.user,\r\n                        followers:[...prevState.user.followers,data._id]\r\n                    }\r\n                }\r\n            }))\r\n        })\r\n        setShowFollow(false)\r\n    }\r\n\r\n    const unfollowUser =()=>{\r\n        fetch('/unfollow',{\r\n            method:\"put\",\r\n            headers:{\r\n                \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\"),\r\n                \"Content-Type\":\"application/json\"\r\n            },\r\n            body:JSON.stringify({\r\n                unfollowId:userid\r\n            })\r\n        }).then(res=>res.json())\r\n        .then(data=>{\r\n            //console.log(data)\r\n            dispatch({type:\"UPDATE\",payload:{following:data.following,followers:data.followers}})\r\n            localStorage.setItem(\"user\",JSON.stringify(data))\r\n            \r\n            setProfile((prevState=>{\r\n                const newFollowers = prevState.user.followers.filter(item=>item !== data._id)\r\n                return {\r\n                    //past state- i/p\r\n                    ...prevState,\r\n                    //new data\r\n                    user:{\r\n                        ...prevState.user,\r\n                        followers:newFollowers\r\n                    }\r\n                }\r\n            }))\r\n        })\r\n        setShowFollow(true)\r\n    }\r\n\r\n    return(\r\n    <>\r\n    {userProfile ? \r\n     <div style={{maxWidth:\"550px\", margin:\"0px auto\"}}>\r\n         <div style={{\r\n             display:\"flex\",\r\n             justifyContent:\"space-around\",\r\n             margin:\"18px 0px\",\r\n             borderBottom:\"1px solid grey\"\r\n         }}>\r\n             <div>\r\n                <img style={{width:\"160px\", height:\"160px\", borderRadius:\"80px\"}}\r\n                src={userProfile.user.pic}\r\n                />\r\n             </div>\r\n\r\n             <div>\r\n                <h4> {userProfile.user.name} </h4>\r\n                <h4> {userProfile.user.email} </h4>\r\n                <h4> {userProfile.user.about} </h4>\r\n                <div style={{display:\"flex\",\r\n                justifyContent:\"space-between\",\r\n                width:\"110%\"\r\n            }}>\r\n                    <h6> {userProfile.posts.length} Posts </h6> \r\n                    <h6> {userProfile.user.followers.length} Followers </h6> \r\n                    <h6> {userProfile.user.following.length} Following </h6> \r\n                    <br></br>\r\n                   \r\n                </div>\r\n             </div>\r\n             {showfollow ?\r\n                <button className=\"btn waves-effect waves-light #64b5f6 blue darken-1\" onClick={()=>followUser()}>\r\n                    Follow\r\n                </button>\r\n                : <button className=\"btn waves-effect waves-light #64b5f6 blue darken-1\" onClick={()=>unfollowUser()}>\r\n                    Unfollow\r\n                </button>}\r\n            \r\n         </div>\r\n       \r\n         <div className=\"gallery\">\r\n             {\r\n                 userProfile.posts.map(item=>{\r\n                     return(\r\n                        <img key={item._id} className=\"item\" src={item.photo} alt={item.title}/>\r\n                     )\r\n                 })\r\n             }\r\n\r\n         </div>\r\n     </div>\r\n      : <h2> Loading </h2> }\r\n     </>\r\n    )\r\n}\r\n\r\nexport default Profile","D:\\Insta-Clone\\client\\src\\components\\screens\\FollowedUsers.js",["214","215","216","217","218","219"],"import React,{useState,useEffect,useContext} from 'react'\r\nimport {UserContext} from '../../App'\r\nimport {Link} from 'react-router-dom'\r\nconst Home  = ()=>{\r\n    const [data,setData] = useState([])\r\n    const {state,dispatch} = useContext(UserContext)\r\n    useEffect(()=>{\r\n       fetch('/followedposts',{\r\n           headers:{\r\n               \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\r\n           }\r\n       }).then(res=>res.json())\r\n       .then(result=>{\r\n           console.log(result)\r\n           setData(result.posts)\r\n       })\r\n    },[])\r\n\r\n    const likePost = (id)=>{\r\n          fetch('/like',{\r\n              method:\"put\",\r\n              headers:{\r\n                  \"Content-Type\":\"application/json\",\r\n                  \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\r\n              },\r\n              body:JSON.stringify({\r\n                  postId:id\r\n              })\r\n          }).then(res=>res.json())\r\n          .then(result=>{\r\n                   //   console.log(result)\r\n            const newData = data.map(item=>{\r\n                if(item._id==result._id){\r\n                    return result\r\n                }else{\r\n                    return item\r\n                }\r\n            })\r\n            setData(newData)\r\n          }).catch(err=>{\r\n              console.log(err)\r\n          })\r\n    }\r\n    const unlikePost = (id)=>{\r\n          fetch('/unlike',{\r\n              method:\"put\",\r\n              headers:{\r\n                  \"Content-Type\":\"application/json\",\r\n                  \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\r\n              },\r\n              body:JSON.stringify({\r\n                  postId:id\r\n              })\r\n          }).then(res=>res.json())\r\n          .then(result=>{\r\n            //   console.log(result)\r\n            const newData = data.map(item=>{\r\n                if(item._id==result._id){\r\n                    return result\r\n                }else{\r\n                    return item\r\n                }\r\n            })\r\n            setData(newData)\r\n          }).catch(err=>{\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n    const makeComment = (text,postId)=>{\r\n          fetch('/comment',{\r\n              method:\"put\",\r\n              headers:{\r\n                  \"Content-Type\":\"application/json\",\r\n                  \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\r\n              },\r\n              body:JSON.stringify({\r\n                  postId,\r\n                  text\r\n              })\r\n          }).then(res=>res.json())\r\n          .then(result=>{\r\n              console.log(result)\r\n              const newData = data.map(item=>{\r\n                if(item._id==result._id){\r\n                    return result\r\n                }else{\r\n                    return item\r\n                }\r\n             })\r\n            setData(newData)\r\n          }).catch(err=>{\r\n              console.log(err)\r\n          })\r\n    }\r\n\r\n    const deletePost = (postid)=>{\r\n        fetch(`/deletepost/${postid}`,{\r\n            method:\"delete\",\r\n            headers:{\r\n                Authorization:\"Bearer \"+localStorage.getItem(\"jwt\")\r\n            }\r\n        }).then(res=>res.json())\r\n        .then(result=>{\r\n            console.log(result)\r\n            const newData = data.filter(item=>{\r\n                return item._id !== result._id\r\n            })\r\n            setData(newData)\r\n        })\r\n    }\r\n   return (\r\n       <div className=\"home\">\r\n           {\r\n               data.map(item=>{\r\n                   return(\r\n                       <div className=\"card home-card\" key={item._id}>\r\n                            <h5 style={{padding:\"5px\"}}><Link to={item.postedBy._id !== state._id?\"/profile/\"+item.postedBy._id :\"/profile\"  }>{item.postedBy.name}</Link> \r\n                            {item.postedBy._id == state._id \r\n                            && <i className=\"material-icons\" style={{\r\n                                float:\"right\",\r\n                                color:\"red\"\r\n                            }} \r\n                            onClick={()=>deletePost(item._id)}\r\n                            >delete</i>\r\n\r\n                            }</h5>\r\n                            <div className=\"card-image\">\r\n                                <img src={item.photo}/>\r\n                            </div>\r\n                            <div className=\"card-content\">\r\n                            <i className=\"material-icons\" style={{color:\"red\"}}>favorite</i>\r\n                            {item.likes.includes(state._id)\r\n                            ? \r\n                             <i className=\"material-icons\"\r\n                                    onClick={()=>{unlikePost(item._id)}}\r\n                              >thumb_down</i>\r\n                            : \r\n                            <i className=\"material-icons\"\r\n                            onClick={()=>{likePost(item._id)}}\r\n                            >thumb_up</i>\r\n                            }\r\n                            \r\n                           \r\n                                <h6>{item.likes.length} likes</h6>\r\n                                <h6>{item.title}</h6>\r\n                                <p>{item.body}</p>\r\n                                {\r\n                                    item.comments.map(record=>{\r\n                                        return(\r\n                                        <h6 key={record._id}><span style={{fontWeight:\"500\"}}>{record.postedBy.name}</span> {record.text}</h6>\r\n                                        )\r\n                                    })\r\n                                }\r\n                                <form onSubmit={(e)=>{\r\n                                    e.preventDefault()\r\n                                    makeComment(e.target[0].value,item._id)\r\n                                }}>\r\n                                  <input type=\"text\" placeholder=\"add a comment\" />  \r\n                                </form>\r\n                                \r\n                            </div>\r\n                        </div> \r\n                   )\r\n               })\r\n           }\r\n          \r\n          \r\n       </div>\r\n   )\r\n}\r\n\r\n\r\nexport default Home",["220","221"],"D:\\Insta-Clone\\client\\src\\components\\screens\\ResetPassword.js",["222","223","224","225"],"import React, {useState, useContext} from 'react'\r\nimport {Link, useHistory} from 'react-router-dom'\r\nimport M from 'materialize-css'\r\n\r\n\r\nconst ResetPassword = () =>{\r\n    const history = useHistory()\r\n    const [email, setEmail] = useState(\"\")\r\n    const PostData = ()=>{\r\n        if(!/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(email))\r\n        {\r\n            M.toast({html:\"Enter a valid email\", classes:\"#82b1ff blue darken-1\"})\r\n            return\r\n        }\r\n\r\n        fetch(\"/resetPassword\",{\r\n            method:\"post\",\r\n            headers:{\r\n                \"Content-Type\":\"application/json\"\r\n            },\r\n            body: JSON.stringify({\r\n                email\r\n            })\r\n        }).then(res=>\r\n            res.json())\r\n        .then(data=>{\r\n            //console.log(data)\r\n           if(data.error)\r\n           {\r\n               M.toast({html: data.error, classes:\"#82b1ff blue darken-1\"})\r\n           }\r\n           else{\r\n               M.toast({html:data.message, classes: \"#00e676 green accent-3\"})\r\n               history.push('/signin')\r\n           }\r\n        }).catch(err=>{\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n    return(\r\n        <body class=\"bg\">\r\n        <div className=\"mycard\">\r\n             <div className=\"card auth-card input-field\">\r\n                <h2> Chords 'N' Strings </h2>\r\n                <input type=\"text\" \r\n                placeholder=\"Email\"\r\n                value={email}\r\n                onChange= {(e)=> setEmail(e.target.value)}/>\r\n\r\n                {/* <input type=\"password\" \r\n                placeholder=\"Password\"\r\n                value={password}\r\n                onChange={(e)=> setPassword(e.target.value)}/> */}\r\n                <br/>\r\n                <button className=\"btn waves-effect waves-light #64b5f6 blue darken-1\"\r\n                onClick={()=> PostData()}>\r\n                    Reset password\r\n                </button>\r\n                {/* \r\n                <h5>\r\n                    <Link to=\"/signup\"> Don't have an account ? </Link>\r\n                </h5> */}\r\n            </div>\r\n        </div>\r\n        </body>\r\n    )\r\n}\r\n\r\nexport default ResetPassword","D:\\Insta-Clone\\client\\src\\components\\screens\\LatestPassword.js",["226","227","228"],"import React, {useState, useContext} from 'react'\r\nimport {Link, useHistory, useParams} from 'react-router-dom'\r\nimport M from 'materialize-css'\r\n\r\nconst LatestPassword = () =>{\r\n    const history = useHistory()\r\n    const [password, setPassword] = useState(\"\")\r\n    const {token} = useParams()\r\n    console.log(token)\r\n    const PostData = ()=>{\r\n        // if(!/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(email))\r\n        // {\r\n        //     M.toast({html:\"Enter a valid email\", classes:\"#82b1ff blue darken-1\"})\r\n        //     return\r\n        // }\r\n\r\n        fetch(\"/newPassword\",{\r\n            method:\"post\",\r\n            headers:{\r\n                \"Content-Type\":\"application/json\"\r\n            },\r\n            body: JSON.stringify({\r\n                password,\r\n                token,\r\n            })\r\n        }).then(res=>\r\n            res.json())\r\n        .then(data=>{\r\n            console.log(data)\r\n           if(data.error)\r\n           {\r\n               M.toast({html: data.error, classes:\"#82b1ff blue darken-1\"})\r\n           }\r\n           else{\r\n            //    localStorage.setItem(\"jwt\",data.token)\r\n            //    localStorage.setItem(\"user\",JSON.stringify(data.user))\r\n            //    dispatch({type:\"USER\",payload:data.user})\r\n               M.toast({html:data.message, classes: \"#00e676 green accent-3\"})\r\n               history.push('/signin')\r\n           }\r\n        }).catch(err=>{\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n    return(\r\n        <body class=\"bg\">\r\n        <div className=\"mycard\">\r\n             <div className=\"card auth-card input-field\">\r\n                <h2> Chords 'N' Strings </h2>\r\n            \r\n                <input type=\"password\" \r\n                placeholder=\"Enter new password\"\r\n                value={password}\r\n                onChange={(e)=> setPassword(e.target.value)}/>\r\n\r\n                <button className=\"btn waves-effect waves-light #64b5f6 blue darken-1\"\r\n                onClick={()=> PostData()}>\r\n                    Change password\r\n                </button>\r\n            </div>\r\n        </div>\r\n        </body>\r\n    )\r\n}\r\n\r\nexport default LatestPassword","D:\\KraftOnChain\\client\\src\\App.js",["229","230"],"D:\\KraftOnChain\\client\\src\\components\\screens\\Signup.js",["231","232","233","234"],"import React, {useState, useEffect} from 'react'\r\nimport {Link, useHistory} from 'react-router-dom'\r\nimport M from 'materialize-css'\r\nimport Dropdown from 'react-dropdown';\r\nimport 'react-dropdown/style.css';\r\nimport vid from './video/bc.mp4'\r\n\r\nconst Signup = () =>{\r\n    const history = useHistory()\r\n    const [name, setName] = useState(\"\")\r\n    const [password, setPassword] = useState(\"\")\r\n    const [email, setEmail] = useState(\"\")\r\n    const [about, setAbout] = useState(\"\")\r\n    const [image, setImage] = useState(\"\")\r\n    const [role, setRole] = useState(\"\")\r\n    const [lang, setLang] = useState(\"\")\r\n    const [url, setUrl] = useState(undefined)\r\n\r\n    const options = [\r\n        'Consumer', 'Craftsman', 'Trader'\r\n      ];\r\n    const defaultOption = options[0];\r\n\r\n    const choices = ['English','Hindi','Tamil']\r\n    const defaultChoice = choices[0]\r\n    //mount field\r\n    useEffect(()=>{\r\n        if(url)\r\n        {\r\n            uploadFields()\r\n        }\r\n\r\n    },[url])\r\n    \r\n    //profile update\r\n    const uploadPic = () =>{\r\n        const data = new FormData()\r\n        data.append(\"file\",image)\r\n        data.append(\"upload_preset\",\"chordsNstrings\")\r\n        data.append(\"cloud_name\", \"chordsnstrings\")\r\n        fetch(\"https://api.cloudinary.com/v1_1/chordsnstrings/image/upload\",{\r\n            method:\"post\",\r\n            body:data\r\n        })\r\n        .then(res=>res.json())\r\n        .then(data=>{\r\n            setUrl(data.url)\r\n            //console.log(data.url)\r\n        })\r\n        .catch(err=>{\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n    const uploadFields =() =>{\r\n          \r\n        if(!/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(email))\r\n        {\r\n            M.toast({html:\"Enter a valid email\", classes:\"#82b1ff blue darken-1\"})\r\n            return\r\n        }\r\n\r\n        fetch(\"/signup\",{\r\n            method:\"post\",\r\n            headers:{\r\n                \"Content-Type\":\"application/json\"\r\n            },\r\n            body: JSON.stringify({\r\n                name,\r\n                password,\r\n                email,\r\n                about,\r\n                pic:url,\r\n                role\r\n            })\r\n        }).then(res=>\r\n            res.json())\r\n        .then(data=>{\r\n           if(data.error)\r\n           {\r\n               M.toast({html: data.error, classes:\"#82b1ff blue darken-1\"})\r\n           }\r\n           else{\r\n               M.toast({html:data.message, classes: \"#00e676 green accent-3\"})\r\n               history.push('/signin')\r\n           }\r\n        }).catch(err=>{\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n    const PostData = ()=>{\r\n        if(image)\r\n        {\r\n            uploadPic()\r\n        }\r\n        else\r\n        {\r\n            uploadFields()\r\n        }\r\n      \r\n    }\r\n\r\n    return(\r\n       \r\n        <div className=\"mycard\">\r\n             <video autoPlay loop muted style={{\r\n            position:\"absolute\",\r\n            width:\"100%\",\r\n            left:\"50%\",\r\n            height:\"1370px\",\r\n            objectFit:\"cover\",\r\n            transform:\"translate(-50%, -50%)\",\r\n            zIndex:\"-1\"\r\n        }}>\r\n            <source src={vid} type=\"video/mp4\"/>\r\n        </video>\r\n             <div className=\"card auth-card input-field\">\r\n                <h2> Kraftogram </h2>\r\n                <input type=\"text\" \r\n                placeholder=\"Name\" \r\n                value={name} \r\n                onChange={(e)=>setName(e.target.value)}/>\r\n\r\n                <input type=\"text\" \r\n                placeholder=\"Email\"\r\n                value={email}\r\n                onChange= {(e)=> setEmail(e.target.value)}/>\r\n\r\n                <input type=\"password\" \r\n                placeholder=\"Password\"\r\n                value={password}\r\n                onChange={(e)=> setPassword(e.target.value)}/>\r\n\r\n                <input type=\"text\" \r\n                placeholder=\"About you\"\r\n                value={about}\r\n                onChange={(e)=> setAbout(e.target.value)}/>\r\n\r\n            <div className=\"file-field input-field\">\r\n                <div className=\"btn #64b5f6 blue darken-1\">\r\n                    <span> Profile Picture </span>\r\n                    <input type=\"file\"\r\n                    onChange={(e)=>setImage(e.target.files[0])}/>\r\n                </div>\r\n                <div className=\"file-path-wrapper\">\r\n                    <input className=\"file-path validate\" type=\"text\"/>\r\n                </div>\r\n            </div>\r\n            \r\n                <Dropdown \r\n                options={options} \r\n                onChange={(e)=> setRole(e.value)}\r\n                value={defaultOption} \r\n                placeholder=\"Select Role\" />\r\n            <h6> Select Language </h6>\r\n            <Dropdown \r\n                options={choices} \r\n                onChange={(e)=> setLang(e.value)}\r\n                value={defaultChoice} \r\n                placeholder=\"Select Language\" />\r\n            <br/>\r\n\r\n                <button className=\"btn waves-effect waves-light #64b5f6 blue darken-1\" onClick={()=>PostData()}>\r\n                    Sign Up\r\n                </button>\r\n                <h5>\r\n                    <Link to=\"/signin\"> Have an account already ? </Link>\r\n                </h5>\r\n               \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Signup","D:\\KraftOnChain\\client\\src\\components\\screens\\Profile.js",["235","236"],"\r\nimport React, {useEffect, useState, useContext} from 'react'\r\nimport {UserContext} from '../../App'\r\n\r\nconst Profile = () =>{\r\n    const [mypics, setPics] = useState([])\r\n    const [image, setImage] = useState(\"\")\r\n    //const [url, setUrl] = useState(\"\")\r\n    const {state, dispatch} = useContext(UserContext)\r\n    console.log(state)\r\n    useEffect(()=>{\r\n        fetch('/mypost',{\r\n            headers:{\r\n                \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\r\n            }\r\n        }).then(res=>res.json())\r\n        .then(result=>{\r\n            setPics(result.mypost)\r\n        })\r\n    },[])\r\n\r\n    useEffect(()=>{\r\n        if(image)\r\n        {\r\n            const data = new FormData()\r\n            data.append(\"file\",image)\r\n            data.append(\"upload_preset\",\"chordsNstrings\")\r\n            data.append(\"cloud_name\", \"chordsnstrings\")\r\n            fetch(\"https://api.cloudinary.com/v1_1/chordsnstrings/image/upload\",{\r\n                method:\"post\",\r\n                body:data\r\n            })\r\n            .then(res=>res.json())\r\n            .then(data=>{\r\n                //setUrl(data.url)\r\n                // localStorage.setItem(\"user\",JSON.stringify({...state, pic:data.url}))\r\n                // //console.log(data.url)\r\n                // dispatch({type:\"PICUPDATE\", payload:data.url})\r\n                fetch('/updatepic',{\r\n                    method:\"put\",\r\n                    headers:{\r\n                        \"Content-type\":\"application/json\",\r\n                        \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\r\n                    },\r\n                    body:JSON.stringify({\r\n                        pic:data.url\r\n                    })\r\n                }).then(res=>res.json())\r\n                .then(result=>{\r\n                    console.log(result)\r\n                    localStorage.setItem(\"user\",JSON.stringify({...state, pic:data.pic}))\r\n                    dispatch({type:\"PICUPDATE\", payload:result.pic})\r\n                    // window.location.reload()\r\n                })\r\n               \r\n            })\r\n            .catch(err=>{\r\n                console.log(err)\r\n            })\r\n        }\r\n\r\n    },[image])\r\n\r\n    const updatePicture = (file)=>{\r\n        setImage(file)\r\n  \r\n    }\r\n\r\n    return(\r\n     <div style={{maxWidth:\"550px\", margin:\"0px auto\"}}>\r\n         <div style={{\r\n             display:\"flex\",\r\n             justifyContent:\"space-around\",\r\n             margin:\"18px 0px\",\r\n             borderBottom:\"1px solid grey\"\r\n         }}>\r\n             <div>\r\n                <img style={{width:\"160px\", height:\"160px\", borderRadius:\"80px\"}}\r\n                src={state?state.pic:\"Loading\"}\r\n                />\r\n             </div>\r\n\r\n             {/* <div>\r\n                <h4> {state?state.name:\"Loading\"} </h4>\r\n                <div style={{display:\"flex\",\r\n                justifyContent:\"space-between\",\r\n                width:\"110%\"\r\n            }}>\r\n                    <h6> {mypics.length} posts </h6> \r\n                    <h6> {state?state.followers.length:\"0\"} Followers </h6> \r\n                    <h6> {state?state.following.length:\"0\"} Following </h6> \r\n                </div>\r\n             </div> */}\r\n              <div>\r\n                   <h4>{state?state.name:\"loading\"}</h4>\r\n                   <h6>{state?state.email:\"loading\"}</h6>\r\n                   <h6>{state?state.about:\"loading\"}</h6>\r\n                   <hr></hr>\r\n                   <div style={{display:\"flex\",justifyContent:\"space-between\",width:\"108%\"}}>\r\n                       <h6>{mypics.length} posts</h6>\r\n                        {/* <h6>0 Followers </h6>\r\n                       <h6>0 Following</h6>  */}\r\n                       <h6>{state?state.followers.length:\"0\"} followers</h6> \r\n                        <h6>{state?state.following.length:\"0\"} following</h6>\r\n                   </div>\r\n\r\n               </div>\r\n               {/* <button className=\"btn waves-effect waves-light #64b5f6 blue darken-1\"\r\n               onClick={()=> updatePicture()}>\r\n                  Change DP\r\n                </button> */}\r\n\r\n            <div className=\"file-field input-field\">\r\n                <div className=\"btn #64b5f6 blue darken-1\">\r\n                    <span>Change DP</span>\r\n                    <input type=\"file\"\r\n                    onChange={(e)=>updatePicture(e.target.files[0])}/>\r\n                </div>\r\n                {/* <div className=\"file-path-wrapper\">\r\n                    <input className=\"file-path validate\" type=\"text\"/>\r\n                </div> */}\r\n            </div>\r\n         </div>\r\n     \r\n         <div className=\"gallery\">\r\n             {\r\n                 mypics.map(item=>{\r\n                     return(\r\n                        <img key={item._id} className=\"item\" src={item.photo} alt={item.title}/>\r\n                     )\r\n                 })\r\n             }\r\n\r\n         </div>\r\n     </div>\r\n    )\r\n}\r\n\r\nexport default Profile",["237","238"],"D:\\KraftOnChain\\client\\src\\reducers\\userReducer.js",[],["239","240"],"D:\\KraftOnChain\\client\\src\\components\\screens\\FollowedUsers.js",["241","242","243","244","245","246"],["247","248"],"D:\\KraftOnChain\\client\\src\\components\\Navbar.js",[],"D:\\KraftOnChain\\client\\src\\components\\screens\\SignIn.js",["249","250","251","252"],"D:\\KraftOnChain\\client\\src\\components\\screens\\Home.js",["253","254","255","256","257","258"],"import React,{useState,useEffect,useContext} from 'react'\r\nimport {UserContext} from '../../App'\r\nimport {Link} from 'react-router-dom'\r\nconst Home  = ()=>{\r\n    const [data,setData] = useState([])\r\n    const {state,dispatch} = useContext(UserContext)\r\n    useEffect(()=>{\r\n       fetch('/allpost',{\r\n           headers:{\r\n               \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\r\n           }\r\n       }).then(res=>res.json())\r\n       .then(result=>{\r\n           console.log(result)\r\n           setData(result.posts)\r\n       })\r\n    },[])\r\n\r\n    const likePost = (id)=>{\r\n          fetch('/like',{\r\n              method:\"put\",\r\n              headers:{\r\n                  \"Content-Type\":\"application/json\",\r\n                  \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\r\n              },\r\n              body:JSON.stringify({\r\n                  postId:id\r\n              })\r\n          }).then(res=>res.json())\r\n          .then(result=>{\r\n                   //   console.log(result)\r\n            const newData = data.map(item=>{\r\n                if(item._id==result._id){\r\n                    return result\r\n                }else{\r\n                    return item\r\n                }\r\n            })\r\n            setData(newData)\r\n          }).catch(err=>{\r\n              console.log(err)\r\n          })\r\n    }\r\n    const unlikePost = (id)=>{\r\n          fetch('/dislike',{\r\n              method:\"put\",\r\n              headers:{\r\n                  \"Content-Type\":\"application/json\",\r\n                  \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\r\n              },\r\n              body:JSON.stringify({\r\n                  postId:id\r\n              })\r\n          }).then(res=>res.json())\r\n          .then(result=>{\r\n            //   console.log(result)\r\n            const newData = data.map(item=>{\r\n                if(item._id==result._id){\r\n                    return result\r\n                }else{\r\n                    return item\r\n                }\r\n            })\r\n            setData(newData)\r\n          }).catch(err=>{\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n    const makeComment = (text,postId)=>{\r\n          fetch('/comment',{\r\n              method:\"put\",\r\n              headers:{\r\n                  \"Content-Type\":\"application/json\",\r\n                  \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\r\n              },\r\n              body:JSON.stringify({\r\n                  postId,\r\n                  text\r\n              })\r\n          }).then(res=>res.json())\r\n          .then(result=>{\r\n              console.log(result)\r\n              const newData = data.map(item=>{\r\n                if(item._id==result._id){\r\n                    return result\r\n                }else{\r\n                    return item\r\n                }\r\n             })\r\n            setData(newData)\r\n          }).catch(err=>{\r\n              console.log(err)\r\n          })\r\n    }\r\n\r\n    const deletePost = (postid)=>{\r\n        fetch(`/deletepost/${postid}`,{\r\n            method:\"delete\",\r\n            headers:{\r\n                Authorization:\"Bearer \"+localStorage.getItem(\"jwt\")\r\n            }\r\n        }).then(res=>res.json())\r\n        .then(result=>{\r\n            console.log(result)\r\n            const newData = data.filter(item=>{\r\n                return item._id !== result._id\r\n            })\r\n            setData(newData)\r\n        })\r\n    }\r\n   return (\r\n       <div className=\"home\">\r\n           {\r\n               data.map(item=>{\r\n                   return(\r\n                       <div className=\"card home-card\" key={item._id}>\r\n                           {/* <img src={state.pic}/> */}\r\n                           {/* <img src={item.postedBy._id == state._id ? state.pic: item.postedBy.pic}/> */}\r\n                            <h5 style={{padding:\"5px\"}}><Link to={item.postedBy._id !== state._id?\"/profile/\"+item.postedBy._id :\"/profile\"  }>{item.postedBy.name}</Link> \r\n                            {item.postedBy._id == state._id \r\n                            && <i className=\"material-icons\" style={{\r\n                                float:\"right\",\r\n                                color:\"red\"\r\n                            }} \r\n                            onClick={()=>deletePost(item._id)}\r\n                            >delete</i>\r\n\r\n                            }</h5>\r\n                            <div className=\"card-image\">\r\n                                <img src={item.photo}/>\r\n                            </div>\r\n                            <div className=\"card-content\">\r\n                            <i className=\"material-icons\" style={{color:\"red\"}}>favorite</i>\r\n                            {item.likes.includes(state._id)\r\n                            ? \r\n                             <i className=\"material-icons\"\r\n                                    onClick={()=>{unlikePost(item._id)}}\r\n                              >thumb_down</i>\r\n                            : \r\n                            <i className=\"material-icons\"\r\n                            onClick={()=>{likePost(item._id)}}\r\n                            >thumb_up</i>\r\n                            }\r\n                            \r\n                           \r\n                                <h6>{item.likes.length} likes</h6>\r\n                                <hr></hr>\r\n                                <h5><b> {item.title} </b></h5>\r\n                                <p>{item.body}</p>\r\n                                <hr></hr>\r\n                                {\r\n                                    item.comments.map(record=>{\r\n                                        return(\r\n                                        <h6 key={record._id}><span style={{fontWeight:\"500\"}}>{record.postedBy.name} :</span>{record.text} </h6>\r\n                                        )\r\n                                    })\r\n                                }\r\n                                <form onSubmit={(e)=>{\r\n                                    e.preventDefault()\r\n                                    makeComment(e.target[0].value,item._id)\r\n                                }}>\r\n                                  <input type=\"text\" placeholder=\"Add a comment\" />  \r\n                                </form>\r\n                                \r\n                            </div>\r\n                        </div> \r\n                   )\r\n               })\r\n           }\r\n          \r\n          \r\n       </div>\r\n   )\r\n}\r\n\r\n\r\nexport default Home",["259","260"],"D:\\KraftOnChain\\client\\src\\reportWebVitals.js",[],"D:\\KraftOnChain\\client\\src\\components\\screens\\UserProfile.js",["261","262"],"\r\nimport React, {useEffect, useState, useContext} from 'react'\r\nimport {UserContext} from '../../App'\r\nimport {useParams} from 'react-router-dom'\r\n\r\nconst Profile = () =>{\r\n    const [userProfile, setProfile] = useState(null)\r\n    const {state, dispatch} = useContext(UserContext)\r\n    const {userid} = useParams()\r\n    const [showfollow, setShowFollow] = useState(state?!state.following.includes(userid):true)\r\n    console.log(userid)\r\n    useEffect(()=>{\r\n        fetch(`/user/${userid}`,{\r\n            headers:{\r\n                \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\r\n            }\r\n        }).then(res=>res.json())\r\n        .then(result=>{\r\n          //console.log(result)\r\n         \r\n          setProfile(result)\r\n        })\r\n    },[])\r\n\r\n    const followUser =()=>{\r\n        fetch('/follow',{\r\n            method:\"put\",\r\n            headers:{\r\n                \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\"),\r\n                \"Content-Type\":\"application/json\"\r\n            },\r\n            body:JSON.stringify({\r\n                followId:userid\r\n            })\r\n        }).then(res=>res.json())\r\n        .then(data=>{\r\n            //console.log(data)\r\n            dispatch({type:\"UPDATE\",payload:{following:data.following,followers:data.followers}})\r\n            localStorage.setItem(\"user\",JSON.stringify(data))\r\n            setProfile((prevState=>{\r\n                return {\r\n                    //past state- i/p\r\n                    ...prevState,\r\n                    //new data\r\n                    user:{\r\n                        ...prevState.user,\r\n                        followers:[...prevState.user.followers,data._id]\r\n                    }\r\n                }\r\n            }))\r\n        })\r\n        setShowFollow(false)\r\n    }\r\n\r\n    const unfollowUser =()=>{\r\n        fetch('/unfollow',{\r\n            method:\"put\",\r\n            headers:{\r\n                \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\"),\r\n                \"Content-Type\":\"application/json\"\r\n            },\r\n            body:JSON.stringify({\r\n                unfollowId:userid\r\n            })\r\n        }).then(res=>res.json())\r\n        .then(data=>{\r\n            //console.log(data)\r\n            dispatch({type:\"UPDATE\",payload:{following:data.following,followers:data.followers}})\r\n            localStorage.setItem(\"user\",JSON.stringify(data))\r\n            \r\n            setProfile((prevState=>{\r\n                const newFollowers = prevState.user.followers.filter(item=>item !== data._id)\r\n                return {\r\n                    //past state- i/p\r\n                    ...prevState,\r\n                    //new data\r\n                    user:{\r\n                        ...prevState.user,\r\n                        followers:newFollowers\r\n                    }\r\n                }\r\n            }))\r\n        })\r\n        setShowFollow(true)\r\n    }\r\n\r\n    return(\r\n    <>\r\n    {userProfile ? \r\n     <div style={{maxWidth:\"550px\", margin:\"0px auto\"}}>\r\n         <div style={{\r\n             display:\"flex\",\r\n             justifyContent:\"space-around\",\r\n             margin:\"18px 0px\",\r\n             borderBottom:\"1px solid grey\"\r\n         }}>\r\n             <div>\r\n                <img style={{width:\"160px\", height:\"160px\", borderRadius:\"80px\"}}\r\n                src={userProfile.user.pic}\r\n                />\r\n             </div>\r\n\r\n             <div>\r\n                <h4> {userProfile.user.name} </h4>\r\n                <h6> {userProfile.user.email} </h6>\r\n                <h6> {userProfile.user.about} </h6>\r\n                <div style={{display:\"flex\",\r\n                justifyContent:\"space-between\",\r\n                width:\"110%\"\r\n            }}>\r\n                    <h6> {userProfile.posts.length} Posts </h6> \r\n                    <h6> {userProfile.user.followers.length} Followers </h6> \r\n                    <h6> {userProfile.user.following.length} Following </h6> \r\n                    <br></br>\r\n                   \r\n                </div>\r\n             </div>\r\n             {showfollow ?\r\n                <button className=\"btn waves-effect waves-light #64b5f6 blue darken-1\" onClick={()=>followUser()}>\r\n                    Follow\r\n                </button>\r\n                : <button className=\"btn waves-effect waves-light #64b5f6 blue darken-1\" onClick={()=>unfollowUser()}>\r\n                    Unfollow\r\n                </button>}\r\n            \r\n         </div>\r\n       \r\n         <div className=\"gallery\">\r\n             {\r\n                 userProfile.posts.map(item=>{\r\n                     return(\r\n                        <img key={item._id} className=\"item\" src={item.photo} alt={item.title}/>\r\n                     )\r\n                 })\r\n             }\r\n\r\n         </div>\r\n     </div>\r\n      : <h2> Loading </h2> }\r\n     </>\r\n    )\r\n}\r\n\r\nexport default Profile",["263","264"],"D:\\KraftOnChain\\client\\src\\components\\screens\\LatestPassword.js",["265","266"],"D:\\KraftOnChain\\client\\src\\components\\screens\\CreatePost.js",["267"],"D:\\KraftOnChain\\client\\src\\index.js",[],"D:\\KraftOnChain\\client\\src\\components\\screens\\ResetPassword.js",["268","269","270","271"],"D:\\KraftOnChain\\client\\src\\components\\screens\\CheckCraft.js",["272","273","274"],"import React, {useState, useContext} from 'react'\r\nimport {Link, useHistory} from 'react-router-dom'\r\nimport M from 'materialize-css'\r\nimport {UserContext} from '../../App'\r\n\r\nconst CheckCraft = () =>{\r\n    const {state, dispatch} = useContext(UserContext)\r\n    const history = useHistory()\r\n    const [craft, setCraft] = useState(\"\")\r\n    const [query, setQuery] = useState(\"\")\r\n    const PostData = ()=>{\r\n        if(!craft)\r\n        {\r\n            M.toast({html:\"Enter a valid craft ID\", classes:\"#82b1ff blue darken-1\"})\r\n            return\r\n        }\r\n        setQuery('Processing')\r\n        fetch(\"/checkcraft\",{\r\n            method:\"post\",\r\n            headers:{\r\n                \"Content-Type\":\"application/json\",\r\n                \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\r\n            },\r\n            body: JSON.stringify({\r\n                craft : craft\r\n            })\r\n        }).then(res=>\r\n            res.json())\r\n        .then(data=>{\r\n            console.log(data)\r\n           if(data.error)\r\n           {\r\n               M.toast({html: data.error, classes:\"#82b1ff blue darken-1\"})\r\n               setQuery('Error in Query')\r\n           }\r\n           else{\r\n               \r\n               M.toast({html:\"Query Successful !\", classes: \"#00e676 green accent-3\"})\r\n               setQuery(data.message)\r\n           }\r\n        }).catch(err=>{\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n    return(\r\n        <div className=\"mycard\">\r\n             <div className=\"card auth-card input-field  #e8eaf6 indigo lighten-5\">\r\n                <h4>Check Craft</h4>\r\n                <input type=\"text\" \r\n                placeholder=\"Enter Craft ID\"\r\n                value={craft}\r\n                onChange= {(e)=> setCraft(e.target.value)}/>\r\n\r\n              \r\n                <button className=\"btn waves-effect waves-light #64b5f6 blue darken-1\"\r\n                onClick={()=> PostData()}>\r\n                    Check\r\n                </button>\r\n\r\n                    &nbsp;                \r\n               <Link to=\"/timeline\">\r\n               <button className=\"btn waves-effect waves-light #64b5f6 blue darken-1\">\r\n                    Track Product\r\n                </button>\r\n                </Link> \r\n\r\n                \r\n            </div>\r\n            <div className=\"card auth-card input-field  #e8eaf6 indigo lighten-5\">\r\n            {query}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CheckCraft","D:\\KraftOnChain\\client\\src\\components\\screens\\chatcomponents\\TextContainer\\TextContainer.js",[],"D:\\KraftOnChain\\client\\src\\components\\screens\\chatcomponents\\Messages\\Message\\Message.js",[],"D:\\KraftOnChain\\client\\src\\components\\screens\\ShipCraft.js",["275","276"],"import React, {useState,useEffect} from 'react'\r\nimport {Link, useHistory} from 'react-router-dom'\r\nimport M from 'materialize-css'\r\nimport Dropdown from 'react-dropdown';\r\nimport 'react-dropdown/style.css';\r\nconst ShipCraft = () =>{\r\n    const history = useHistory()\r\n    const [craft, setCraft] = useState(\"\")\r\n    const [lat, setLat] = useState(\"\")\r\n    const [long, setLong] = useState(\"\")\r\n    const [loc, setLoc] = useState('Current Location')\r\n    const [region, setRegion] = useState(\"\")\r\n    const [states, setStates] = useState(\"\")\r\n    const [shipped, setShipped] = useState(\"\")\r\n\r\n\r\n    const options = [\r\n        'Current Location', 'Manual Location'\r\n      ];\r\n    const defaultOption = options[0];\r\n\r\n    const PostData = ()=>{\r\n        var locat = \"\";\r\n        if(loc === 'Current Location')\r\n        { \r\n             locat = lat + \",\" + long;\r\n        }\r\n        else{\r\n             locat = region + \",\" + states;\r\n        }\r\n        if(!craft)\r\n        {\r\n            M.toast({html:\"Enter a valid craft ID\", classes:\"#82b1ff blue darken-1\"})\r\n            return\r\n        }\r\n     \r\n        setShipped(\"Processing\")\r\n\r\n        fetch(\"/updatecraft\",{\r\n            method:\"post\",\r\n            headers:{\r\n                \"Content-Type\":\"application/json\",\r\n                \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\r\n            },\r\n            body: JSON.stringify({\r\n                craft : craft,\r\n                location : locat\r\n            })\r\n        }).then(res=>\r\n            res.json())\r\n        .then(data=>{\r\n           if(data.error)\r\n           {\r\n               M.toast({html: data.error, classes:\"#82b1ff blue darken-1\"})\r\n               setShipped(\"Error in process\")\r\n           }\r\n           else{\r\n               M.toast({html: 'Shipment Successful !', classes: \"#00e676 green accent-3\"})\r\n               setShipped(data.message)\r\n               setCraft(\"\")\r\n               //history.push('/signin')\r\n           }\r\n        }).catch(err=>{\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        navigator.geolocation.getCurrentPosition(function(position) {\r\n          setLat(position.coords.latitude);\r\n          setLong(position.coords.longitude);\r\n        })\r\n       },[]);\r\n    return(\r\n        <div className=\"mycard\">\r\n             <div className=\"card auth-card input-field #e8eaf6 indigo lighten-5\">\r\n                <h4>Update Shipment</h4>\r\n                <input type=\"text\" \r\n                placeholder=\"Enter Craft ID\"\r\n                value={craft}\r\n                onChange= {(e)=> setCraft(e.target.value)}/>\r\n\r\n            \r\n\r\n                <Dropdown \r\n                options={options} \r\n                onChange={(e)=> setLoc(e.value)}\r\n                value={defaultOption} \r\n                placeholder=\"Select Location\" />\r\n                <br/>\r\n\r\n                {loc === 'Current Location'  &&\r\n                <input type=\"text\" \r\n                placeholder=\"Lat\" \r\n                value={lat} \r\n               />\r\n                }\r\n\r\n                {loc === 'Current Location'  &&\r\n                <input type=\"text\" \r\n                placeholder=\"Long\" \r\n                value={long} \r\n                />\r\n                }\r\n\r\n                { loc !== 'Current Location' &&  \r\n                <input type=\"text\" \r\n                placeholder=\"State\" \r\n                value={states} \r\n                onChange={(e)=>setStates(e.target.value)}/>\r\n                }\r\n\r\n                { loc !== 'Current Location' &&\r\n                <input type=\"text\" \r\n                placeholder=\"Region\" \r\n                value={region} \r\n                onChange={(e)=>setRegion(e.target.value)}/>\r\n                }\r\n                <button className=\"btn waves-effect waves-light #64b5f6 blue darken-1\" onClick={()=>PostData()}>\r\n                    Update Craft\r\n                </button>\r\n                \r\n            </div>\r\n            <div className=\"card auth-card input-field #e8eaf6 indigo lighten-5\">\r\n                {shipped}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ShipCraft","D:\\KraftOnChain\\client\\src\\components\\screens\\Join.js",["277","278","279","280","281"],"import React, {useState, useContext} from 'react'\r\nimport {Link, useHistory} from 'react-router-dom'\r\nimport M from 'materialize-css'\r\nimport {UserContext} from '../../App'\r\n\r\nimport './Join.css';\r\n\r\nconst Join = () =>{\r\n    const {state, dispatch} = useContext(UserContext)\r\n    const history = useHistory()\r\n    const [name, setName] = useState(\"\")\r\n    const [community, setCommunity] = useState(\"\")\r\n\r\n\r\n    return(\r\n        <div className=\"joinOuterContainer\">\r\n            <div className=\"joinInnerContainer\">\r\n                <h1 className=\"heading\">Join Community</h1>\r\n                {/* <div><input placeholder=\"Name\" className=\"joinInput\" type=\"text\" onChange={(event) =>{ setName(event.target.value)}} /></div>   */}\r\n                <div><input placeholder=\"Community\" className=\"joinInput mt-20\" type=\"text\" onChange={(event) =>{ setCommunity(event.target.value)}} /></div>       \r\n                <Link onClick={ event => (!community ) ? event.preventDefault : null } to={`/chat?name=${state.name}&community=${community}`}>\r\n                    <button className=\"button mt-20\" type=\"submit\">Enter</button>\r\n                </Link>\r\n            </div>             \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Join","D:\\KraftOnChain\\client\\src\\components\\screens\\chatcomponents\\InfoBar\\InfoBar.js",[],"D:\\KraftOnChain\\client\\src\\components\\screens\\chatcomponents\\Messages\\Messages.js",[],"D:\\KraftOnChain\\client\\src\\components\\screens\\chatcomponents\\Input\\Input.js",[],"D:\\KraftOnChain\\client\\src\\components\\screens\\AddCraft.js",["282","283","284","285"],"import React, {useState,useEffect} from 'react'\r\nimport {Link, useHistory} from 'react-router-dom'\r\nimport M from 'materialize-css'\r\nimport Dropdown from 'react-dropdown';\r\nimport 'react-dropdown/style.css';\r\nimport { useQRCode } from 'react-hook-qrcode';\r\n\r\nconst AddCraft = () =>{\r\n    const history = useHistory()\r\n    const [name, setName] = useState(\"\")\r\n    const [added, setAdded] = useState(\"\")\r\n    const [id, setId] = useState(\"0\")\r\n\r\n    const [inputRef] = useQRCode({\r\n        text: !id ? \"0\" : id ,\r\n        options: {  \r\n          level: 'M',\r\n          margin: 7,\r\n          scale: 1,\r\n          width: 200,\r\n          color: {\r\n            dark: '#010599FF',\r\n            light: '#FFBF60FF',\r\n          },\r\n        },\r\n      });\r\n      \r\n\r\n    const PostData = ()=>{\r\n        if(!name)\r\n        {\r\n            M.toast({html:\"Enter a valid name\", classes:\"#82b1ff blue darken-1\"})\r\n            return\r\n        }\r\n     \r\n        setAdded(\"Processing\")\r\n\r\n        fetch(\"/addcraft\",{\r\n            method:\"post\",\r\n            headers:{\r\n                \"Content-Type\":\"application/json\",\r\n                \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\r\n            },\r\n            body: JSON.stringify({\r\n                name\r\n            })\r\n        }).then(res=>\r\n            res.json())\r\n        .then(data=>{\r\n           if(data.error)\r\n           {\r\n               M.toast({html: data.error, classes:\"#82b1ff blue darken-1\"})\r\n               setAdded(\"Error in process\")\r\n           }\r\n           else{\r\n               M.toast({html: 'Added Successfully !', classes: \"#00e676 green accent-3\"})\r\n               setAdded(data.message)\r\n               console.log(data)\r\n               setId(data.id.toString())\r\n               setName(\"\")\r\n               //history.push('/signin')\r\n           }\r\n        }).catch(err=>{\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n   \r\n    return(\r\n        <div className=\"mycard\">\r\n             <div className=\"card auth-card input-field #e8eaf6 indigo lighten-5\">\r\n                <h4>Please Fill Craft Details</h4>\r\n                <input type=\"text\" \r\n                placeholder=\"Name\" \r\n                value={name} \r\n                onChange={(e)=>setName(e.target.value)}/>\r\n\r\n                <button className=\"btn waves-effect waves-light #64b5f6 blue darken-1\" onClick={()=>PostData()}>\r\n                    Register Craft\r\n                </button>\r\n                \r\n            </div>\r\n\r\n            <div className=\"card auth-card input-field #e8eaf6 indigo lighten-5\">\r\n                {added}\r\n                <br />\r\n                <canvas ref={inputRef} /> \r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddCraft","D:\\KraftOnChain\\client\\src\\components\\screens\\Timeline.js",["286","287","288","289"],"D:\\KraftOnChain\\client\\src\\components\\screens\\Chat.js",["290"],"import React, { useState, useEffect } from \"react\";\r\nimport queryString from 'query-string';\r\nimport io from \"socket.io-client\";\r\nimport { useLocation } from 'react-router-dom';\r\nimport TextContainer from './chatcomponents/TextContainer/TextContainer';\r\nimport Messages from './chatcomponents/Messages/Messages';\r\nimport InfoBar from './chatcomponents/InfoBar/InfoBar';\r\nimport Input from './chatcomponents/Input/Input';\r\n\r\nimport './Chat.css';\r\n\r\n\r\nlet socket;\r\nconst ENDPOINT = '/';\r\n\r\nconst Chat = () => {\r\n  const [name, setName] = useState('');\r\n  const [room, setRoom] = useState('');\r\n  const [users, setUsers] = useState('');\r\n  const [message, setMessage] = useState('');\r\n  const [messages, setMessages] = useState([]);\r\n  const location = useLocation();\r\n  console.log(location)\r\n\r\n   useEffect(() => {\r\n     const { name, community } = queryString.parse(location.search);\r\n    socket = io('/');\r\n    console.log(name,community)\r\n    setRoom(community);\r\n    setName(name);\r\n\r\n    socket.emit('join', { name, room : community }, (error) => {\r\n      if(error) {\r\n        alert(error);\r\n      }\r\n    });\r\n   }, [ ENDPOINT,location.search]);\r\n  \r\n  useEffect(() => {\r\n    socket.on('message', message => {\r\n      setMessages(messages => [ ...messages, message ]);\r\n    });\r\n    \r\n    socket.on(\"roomData\", ({ users }) => {\r\n      setUsers(users);\r\n    });\r\n}, []);\r\n\r\n  const sendMessage = (event) => {\r\n    event.preventDefault();\r\n\r\n    if(message) {\r\n      socket.emit('sendMessage', message, () => setMessage(''));\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"outerContainer\">\r\n      <div className=\"container\">\r\n          <InfoBar room={room} />\r\n          <Messages messages={messages} name={name} />\r\n          <Input message={message} setMessage={setMessage} sendMessage={sendMessage} />\r\n      </div>\r\n      <TextContainer users={users}/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Chat;","D:\\KraftOnChain\\client\\src\\components\\screens\\Tour.js",["291","292"],"// import React, { useState, useEffect }from 'react'\r\n import ReactPlayer from 'react-player'\r\n import tour from './video/kraft.mp4'\r\n import useSound from 'use-sound';\r\nimport React from 'react';\r\nimport audio1 from './sound/GTLENG.ogg'\r\nimport audio2 from './sound/GTLTAM.ogg'\r\nimport audio5 from './sound/GTLKAN.ogg'\r\nimport audio4 from './sound/GTLTEL.ogg'\r\nimport audio3 from './sound/GTLHIN.ogg'\r\n\r\nclass Tour extends React.Component {\r\n    //const [play] = useSound(music);\r\n    constructor (props) {\r\n        super(props);\r\n        this.audios = props.list.map(audio => new Audio(audio));\r\n    }\r\n\r\n    getCurrentAudio () {\r\n        return this.audios.find(audio => false === audio.paused);\r\n    }\r\n\r\n    toggle (nextAudio) {\r\n        const currentAudio = this.getCurrentAudio();\r\n        if (currentAudio && currentAudio !== nextAudio) {\r\n            currentAudio.pause();\r\n        }\r\n        nextAudio.paused ? nextAudio.play() : nextAudio.pause();\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <div>\r\n                 <center>\r\n        <ReactPlayer controls url={tour} onStart={()=> console.log('started')}/>\r\n       <br/>\r\n        <h5> To know more ,choose your preferred language</h5>\r\n         <br/>\r\n\r\n         <button className=\"btn waves-effect waves-light #64b5f6 blue darken-1\">\r\n                    English \r\n             </button>\r\n             &nbsp;&nbsp;&nbsp;\r\n             <button className=\"btn waves-effect waves-light #64b5f6 blue darken-1\">\r\n                தமிழ்\r\n              </button>\r\n              &nbsp;&nbsp;&nbsp;\r\n              <button className=\"btn waves-effect waves-light #64b5f6 blue darken-1\">\r\n              हिंदी\r\n              </button>\r\n              &nbsp;&nbsp;&nbsp;\r\n              <button className=\"btn waves-effect waves-light #64b5f6 blue darken-1\">\r\n              తెలుగు\r\n              </button>\r\n              &nbsp;&nbsp;&nbsp;\r\n              <button className=\"btn waves-effect waves-light #64b5f6 blue darken-1\">\r\n              ಕನ್ನಡ\r\n              </button>\r\n              &nbsp;&nbsp;&nbsp;\r\n             {/* <button onClick={play}>Boop!</button>; */}\r\n            <br/>\r\n                { this.audios.map((audio, index) =>\r\n                    <button onClick={() => this.toggle(audio) }>\r\n                        PLAY {index+1}\r\n                    </button> \r\n                ) \r\n                }\r\n             \r\n             </center>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default () => <Tour list={[audio1, audio2, audio3, audio4, audio5 ]}/>;",{"ruleId":"293","replacedBy":"294"},{"ruleId":"295","replacedBy":"296"},{"ruleId":"297","severity":1,"message":"298","line":20,"column":10,"nodeType":"299","messageId":"300","endLine":20,"endColumn":15},{"ruleId":"301","severity":1,"message":"302","line":35,"column":5,"nodeType":"303","endLine":35,"endColumn":7,"suggestions":"304"},{"ruleId":"293","replacedBy":"305"},{"ruleId":"295","replacedBy":"306"},{"ruleId":"297","severity":1,"message":"307","line":6,"column":18,"nodeType":"299","messageId":"300","endLine":6,"endColumn":26},{"ruleId":"308","severity":1,"message":"309","line":33,"column":28,"nodeType":"310","messageId":"311","endLine":33,"endColumn":30},{"ruleId":"308","severity":1,"message":"309","line":58,"column":28,"nodeType":"310","messageId":"311","endLine":58,"endColumn":30},{"ruleId":"308","severity":1,"message":"309","line":85,"column":28,"nodeType":"310","messageId":"311","endLine":85,"endColumn":30},{"ruleId":"308","severity":1,"message":"309","line":121,"column":48,"nodeType":"310","messageId":"311","endLine":121,"endColumn":50},{"ruleId":"312","severity":1,"message":"313","line":131,"column":33,"nodeType":"314","endLine":131,"endColumn":56},{"ruleId":"301","severity":1,"message":"315","line":21,"column":7,"nodeType":"303","endLine":21,"endColumn":12,"suggestions":"316"},{"ruleId":"317","severity":1,"message":"318","line":45,"column":23,"nodeType":"319","messageId":"320","endLine":45,"endColumn":24,"suggestions":"321"},{"ruleId":"317","severity":1,"message":"318","line":45,"column":48,"nodeType":"319","messageId":"320","endLine":45,"endColumn":49,"suggestions":"322"},{"ruleId":"301","severity":1,"message":"323","line":62,"column":7,"nodeType":"303","endLine":62,"endColumn":14,"suggestions":"324"},{"ruleId":"312","severity":1,"message":"313","line":78,"column":17,"nodeType":"314","endLine":80,"endColumn":19},{"ruleId":"297","severity":1,"message":"298","line":7,"column":12,"nodeType":"299","messageId":"300","endLine":7,"endColumn":17},{"ruleId":"317","severity":1,"message":"318","line":12,"column":23,"nodeType":"319","messageId":"320","endLine":12,"endColumn":24,"suggestions":"325"},{"ruleId":"317","severity":1,"message":"318","line":12,"column":48,"nodeType":"319","messageId":"320","endLine":12,"endColumn":49,"suggestions":"326"},{"ruleId":"301","severity":1,"message":"327","line":41,"column":8,"nodeType":"303","endLine":41,"endColumn":13,"suggestions":"328"},{"ruleId":"301","severity":1,"message":"329","line":23,"column":7,"nodeType":"303","endLine":23,"endColumn":9,"suggestions":"330"},{"ruleId":"312","severity":1,"message":"313","line":98,"column":17,"nodeType":"314","endLine":100,"endColumn":19},{"ruleId":"297","severity":1,"message":"307","line":6,"column":18,"nodeType":"299","messageId":"300","endLine":6,"endColumn":26},{"ruleId":"308","severity":1,"message":"309","line":33,"column":28,"nodeType":"310","messageId":"311","endLine":33,"endColumn":30},{"ruleId":"308","severity":1,"message":"309","line":58,"column":28,"nodeType":"310","messageId":"311","endLine":58,"endColumn":30},{"ruleId":"308","severity":1,"message":"309","line":85,"column":28,"nodeType":"310","messageId":"311","endLine":85,"endColumn":30},{"ruleId":"308","severity":1,"message":"309","line":119,"column":48,"nodeType":"310","messageId":"311","endLine":119,"endColumn":50},{"ruleId":"312","severity":1,"message":"313","line":129,"column":33,"nodeType":"314","endLine":129,"endColumn":56},{"ruleId":"293","replacedBy":"331"},{"ruleId":"295","replacedBy":"332"},{"ruleId":"297","severity":1,"message":"333","line":1,"column":26,"nodeType":"299","messageId":"300","endLine":1,"endColumn":36},{"ruleId":"297","severity":1,"message":"334","line":2,"column":9,"nodeType":"299","messageId":"300","endLine":2,"endColumn":13},{"ruleId":"317","severity":1,"message":"318","line":10,"column":23,"nodeType":"319","messageId":"320","endLine":10,"endColumn":24,"suggestions":"335"},{"ruleId":"317","severity":1,"message":"318","line":10,"column":48,"nodeType":"319","messageId":"320","endLine":10,"endColumn":49,"suggestions":"336"},{"ruleId":"297","severity":1,"message":"333","line":1,"column":26,"nodeType":"299","messageId":"300","endLine":1,"endColumn":36},{"ruleId":"297","severity":1,"message":"334","line":2,"column":9,"nodeType":"299","messageId":"300","endLine":2,"endColumn":13},{"ruleId":"297","severity":1,"message":"337","line":4,"column":9,"nodeType":"299","messageId":"300","endLine":4,"endColumn":20},{"ruleId":"297","severity":1,"message":"298","line":27,"column":10,"nodeType":"299","messageId":"300","endLine":27,"endColumn":15},{"ruleId":"301","severity":1,"message":"302","line":42,"column":5,"nodeType":"303","endLine":42,"endColumn":7,"suggestions":"338"},{"ruleId":"297","severity":1,"message":"339","line":16,"column":12,"nodeType":"299","messageId":"300","endLine":16,"endColumn":16},{"ruleId":"301","severity":1,"message":"315","line":33,"column":7,"nodeType":"303","endLine":33,"endColumn":12,"suggestions":"340"},{"ruleId":"317","severity":1,"message":"318","line":57,"column":23,"nodeType":"319","messageId":"320","endLine":57,"endColumn":24,"suggestions":"341"},{"ruleId":"317","severity":1,"message":"318","line":57,"column":48,"nodeType":"319","messageId":"320","endLine":57,"endColumn":49,"suggestions":"342"},{"ruleId":"301","severity":1,"message":"323","line":62,"column":7,"nodeType":"303","endLine":62,"endColumn":14,"suggestions":"343"},{"ruleId":"312","severity":1,"message":"313","line":78,"column":17,"nodeType":"314","endLine":80,"endColumn":19},{"ruleId":"293","replacedBy":"344"},{"ruleId":"295","replacedBy":"345"},{"ruleId":"293","replacedBy":"346"},{"ruleId":"295","replacedBy":"347"},{"ruleId":"297","severity":1,"message":"307","line":6,"column":18,"nodeType":"299","messageId":"300","endLine":6,"endColumn":26},{"ruleId":"308","severity":1,"message":"309","line":33,"column":28,"nodeType":"310","messageId":"311","endLine":33,"endColumn":30},{"ruleId":"308","severity":1,"message":"309","line":58,"column":28,"nodeType":"310","messageId":"311","endLine":58,"endColumn":30},{"ruleId":"308","severity":1,"message":"309","line":85,"column":28,"nodeType":"310","messageId":"311","endLine":85,"endColumn":30},{"ruleId":"308","severity":1,"message":"309","line":119,"column":48,"nodeType":"310","messageId":"311","endLine":119,"endColumn":50},{"ruleId":"312","severity":1,"message":"313","line":129,"column":33,"nodeType":"314","endLine":129,"endColumn":56},{"ruleId":"293","replacedBy":"348"},{"ruleId":"295","replacedBy":"349"},{"ruleId":"297","severity":1,"message":"350","line":10,"column":12,"nodeType":"299","messageId":"300","endLine":10,"endColumn":16},{"ruleId":"297","severity":1,"message":"298","line":11,"column":12,"nodeType":"299","messageId":"300","endLine":11,"endColumn":17},{"ruleId":"317","severity":1,"message":"318","line":16,"column":23,"nodeType":"319","messageId":"320","endLine":16,"endColumn":24,"suggestions":"351"},{"ruleId":"317","severity":1,"message":"318","line":16,"column":48,"nodeType":"319","messageId":"320","endLine":16,"endColumn":49,"suggestions":"352"},{"ruleId":"297","severity":1,"message":"307","line":6,"column":18,"nodeType":"299","messageId":"300","endLine":6,"endColumn":26},{"ruleId":"308","severity":1,"message":"309","line":33,"column":28,"nodeType":"310","messageId":"311","endLine":33,"endColumn":30},{"ruleId":"308","severity":1,"message":"309","line":58,"column":28,"nodeType":"310","messageId":"311","endLine":58,"endColumn":30},{"ruleId":"308","severity":1,"message":"309","line":85,"column":28,"nodeType":"310","messageId":"311","endLine":85,"endColumn":30},{"ruleId":"308","severity":1,"message":"309","line":121,"column":48,"nodeType":"310","messageId":"311","endLine":121,"endColumn":50},{"ruleId":"312","severity":1,"message":"313","line":131,"column":33,"nodeType":"314","endLine":131,"endColumn":56},{"ruleId":"293","replacedBy":"353"},{"ruleId":"295","replacedBy":"354"},{"ruleId":"301","severity":1,"message":"329","line":23,"column":7,"nodeType":"303","endLine":23,"endColumn":9,"suggestions":"355"},{"ruleId":"312","severity":1,"message":"313","line":98,"column":17,"nodeType":"314","endLine":100,"endColumn":19},{"ruleId":"293","replacedBy":"356"},{"ruleId":"295","replacedBy":"357"},{"ruleId":"297","severity":1,"message":"333","line":1,"column":26,"nodeType":"299","messageId":"300","endLine":1,"endColumn":36},{"ruleId":"297","severity":1,"message":"334","line":2,"column":9,"nodeType":"299","messageId":"300","endLine":2,"endColumn":13},{"ruleId":"301","severity":1,"message":"327","line":41,"column":8,"nodeType":"303","endLine":41,"endColumn":13,"suggestions":"358"},{"ruleId":"297","severity":1,"message":"333","line":1,"column":26,"nodeType":"299","messageId":"300","endLine":1,"endColumn":36},{"ruleId":"297","severity":1,"message":"334","line":2,"column":9,"nodeType":"299","messageId":"300","endLine":2,"endColumn":13},{"ruleId":"317","severity":1,"message":"318","line":10,"column":23,"nodeType":"319","messageId":"320","endLine":10,"endColumn":24,"suggestions":"359"},{"ruleId":"317","severity":1,"message":"318","line":10,"column":48,"nodeType":"319","messageId":"320","endLine":10,"endColumn":49,"suggestions":"360"},{"ruleId":"297","severity":1,"message":"298","line":7,"column":12,"nodeType":"299","messageId":"300","endLine":7,"endColumn":17},{"ruleId":"297","severity":1,"message":"307","line":7,"column":19,"nodeType":"299","messageId":"300","endLine":7,"endColumn":27},{"ruleId":"297","severity":1,"message":"361","line":8,"column":11,"nodeType":"299","messageId":"300","endLine":8,"endColumn":18},{"ruleId":"297","severity":1,"message":"334","line":2,"column":9,"nodeType":"299","messageId":"300","endLine":2,"endColumn":13},{"ruleId":"297","severity":1,"message":"361","line":7,"column":11,"nodeType":"299","messageId":"300","endLine":7,"endColumn":18},{"ruleId":"297","severity":1,"message":"362","line":3,"column":8,"nodeType":"299","messageId":"300","endLine":3,"endColumn":9},{"ruleId":"297","severity":1,"message":"307","line":9,"column":19,"nodeType":"299","messageId":"300","endLine":9,"endColumn":27},{"ruleId":"297","severity":1,"message":"361","line":10,"column":11,"nodeType":"299","messageId":"300","endLine":10,"endColumn":18},{"ruleId":"297","severity":1,"message":"363","line":11,"column":12,"nodeType":"299","messageId":"300","endLine":11,"endColumn":16},{"ruleId":"297","severity":1,"message":"364","line":11,"column":18,"nodeType":"299","messageId":"300","endLine":11,"endColumn":25},{"ruleId":"297","severity":1,"message":"365","line":1,"column":25,"nodeType":"299","messageId":"300","endLine":1,"endColumn":34},{"ruleId":"297","severity":1,"message":"334","line":2,"column":9,"nodeType":"299","messageId":"300","endLine":2,"endColumn":13},{"ruleId":"297","severity":1,"message":"366","line":4,"column":8,"nodeType":"299","messageId":"300","endLine":4,"endColumn":16},{"ruleId":"297","severity":1,"message":"361","line":9,"column":11,"nodeType":"299","messageId":"300","endLine":9,"endColumn":18},{"ruleId":"297","severity":1,"message":"367","line":4,"column":8,"nodeType":"299","messageId":"300","endLine":4,"endColumn":11},{"ruleId":"312","severity":1,"message":"313","line":26,"column":4,"nodeType":"314","endLine":27,"endColumn":6},{"ruleId":"312","severity":1,"message":"313","line":50,"column":4,"nodeType":"314","endLine":51,"endColumn":48},{"ruleId":"312","severity":1,"message":"313","line":72,"column":4,"nodeType":"314","endLine":73,"endColumn":48},{"ruleId":"301","severity":1,"message":"368","line":37,"column":7,"nodeType":"303","endLine":37,"endColumn":34,"suggestions":"369"},{"ruleId":"297","severity":1,"message":"370","line":4,"column":9,"nodeType":"299","messageId":"300","endLine":4,"endColumn":17},{"ruleId":"371","severity":1,"message":"372","line":75,"column":1,"nodeType":"373","endLine":75,"endColumn":79},"no-native-reassign",["374"],"no-negated-in-lhs",["375"],"no-unused-vars","'state' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'history'. Either include them or remove the dependency array.","ArrayExpression",["376"],["374"],["375"],"'dispatch' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useEffect has a missing dependency: 'uploadFields'. Either include it or remove the dependency array.",["377"],"no-useless-escape","Unnecessary escape character: \\[.","Literal","unnecessaryEscape",["378","379"],["380","381"],"React Hook useEffect has missing dependencies: 'dispatch' and 'state'. Either include them or remove the dependency array.",["382"],["383","384"],["385","386"],"React Hook useEffect has missing dependencies: 'body', 'history', and 'title'. Either include them or remove the dependency array.",["387"],"React Hook useEffect has a missing dependency: 'userid'. Either include it or remove the dependency array.",["388"],["374"],["375"],"'useContext' is defined but never used.","'Link' is defined but never used.",["389","390"],["391","392"],"'UserContext' is defined but never used.",["393"],"'lang' is assigned a value but never used.",["394"],["395","396"],["397","398"],["399"],["374"],["375"],["374"],["375"],["374"],["375"],"'play' is assigned a value but never used.",["400","401"],["402","403"],["374"],["375"],["404"],["374"],["375"],["405"],["406","407"],["408","409"],"'history' is assigned a value but never used.","'M' is defined but never used.","'name' is assigned a value but never used.","'setName' is assigned a value but never used.","'useEffect' is defined but never used.","'Dropdown' is defined but never used.","'vid' is defined but never used.","React Hook useEffect has an unnecessary dependency: 'ENDPOINT'. Either exclude it or remove the dependency array. Outer scope values like 'ENDPOINT' aren't valid dependencies because mutating them doesn't re-render the component.",["410"],"'useSound' is defined but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation",{"desc":"411","fix":"412"},{"desc":"413","fix":"414"},{"messageId":"415","fix":"416","desc":"417"},{"messageId":"418","fix":"419","desc":"420"},{"messageId":"415","fix":"421","desc":"417"},{"messageId":"418","fix":"422","desc":"420"},{"desc":"423","fix":"424"},{"messageId":"415","fix":"425","desc":"417"},{"messageId":"418","fix":"426","desc":"420"},{"messageId":"415","fix":"427","desc":"417"},{"messageId":"418","fix":"428","desc":"420"},{"desc":"429","fix":"430"},{"desc":"431","fix":"432"},{"messageId":"415","fix":"433","desc":"417"},{"messageId":"418","fix":"434","desc":"420"},{"messageId":"415","fix":"435","desc":"417"},{"messageId":"418","fix":"436","desc":"420"},{"desc":"411","fix":"437"},{"desc":"413","fix":"438"},{"messageId":"415","fix":"439","desc":"417"},{"messageId":"418","fix":"440","desc":"420"},{"messageId":"415","fix":"441","desc":"417"},{"messageId":"418","fix":"442","desc":"420"},{"desc":"423","fix":"443"},{"messageId":"415","fix":"444","desc":"417"},{"messageId":"418","fix":"445","desc":"420"},{"messageId":"415","fix":"446","desc":"417"},{"messageId":"418","fix":"447","desc":"420"},{"desc":"431","fix":"448"},{"desc":"429","fix":"449"},{"messageId":"415","fix":"450","desc":"417"},{"messageId":"418","fix":"451","desc":"420"},{"messageId":"415","fix":"452","desc":"417"},{"messageId":"418","fix":"453","desc":"420"},{"desc":"454","fix":"455"},"Update the dependencies array to be: [dispatch, history]",{"range":"456","text":"457"},"Update the dependencies array to be: [uploadFields, url]",{"range":"458","text":"459"},"removeEscape",{"range":"460","text":"461"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"462","text":"463"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"464","text":"461"},{"range":"465","text":"463"},"Update the dependencies array to be: [dispatch, image, state]",{"range":"466","text":"467"},{"range":"468","text":"461"},{"range":"469","text":"463"},{"range":"470","text":"461"},{"range":"471","text":"463"},"Update the dependencies array to be: [body, history, title, url]",{"range":"472","text":"473"},"Update the dependencies array to be: [userid]",{"range":"474","text":"475"},{"range":"476","text":"461"},{"range":"477","text":"463"},{"range":"478","text":"461"},{"range":"479","text":"463"},{"range":"480","text":"457"},{"range":"481","text":"459"},{"range":"482","text":"461"},{"range":"483","text":"463"},{"range":"484","text":"461"},{"range":"485","text":"463"},{"range":"486","text":"467"},{"range":"487","text":"461"},{"range":"488","text":"463"},{"range":"489","text":"461"},{"range":"490","text":"463"},{"range":"491","text":"475"},{"range":"492","text":"473"},{"range":"493","text":"461"},{"range":"494","text":"463"},{"range":"495","text":"461"},{"range":"496","text":"463"},"Update the dependencies array to be: [location.search]",{"range":"497","text":"498"},[1235,1237],"[dispatch, history]",[581,586],"[uploadFields, url]",[1243,1244],"",[1243,1243],"\\",[1268,1269],[1268,1268],[2167,2174],"[dispatch, image, state]",[432,433],[432,432],[457,458],[457,457],[1275,1280],"[body, history, title, url]",[753,755],"[userid]",[297,298],[297,297],[322,323],[322,322],[1588,1590],[979,984],[1641,1642],[1641,1641],[1666,1667],[1666,1666],[2167,2174],[584,585],[584,584],[609,610],[609,609],[753,755],[1275,1280],[297,298],[297,297],[322,323],[322,322],[1120,1147],"[location.search]"]